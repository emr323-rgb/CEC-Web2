2025-05-14 00:11:38,853 - semgrep.notifications - WARNING - METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

2025-05-14 00:11:38,855 - semgrep.run_scan - DEBUG - semgrep version 1.2.0
2025-05-14 00:11:38,865 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-05-14 00:11:38,866 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-14 00:11:38,868 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-14 00:11:38,873 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-nhfuzfxj.rules
2025-05-14 00:11:39,190 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEINoRJhW/semgrep/bin/semgrep-core-proprietary'.
2025-05-14 00:11:39,918 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-05-14 00:11:39,918 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-05-14 00:11:39,918 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-05-14 00:11:39,919 - semgrep.config_resolver - DEBUG - loaded 1 configs in 1.052875280380249
2025-05-14 00:11:40,174 - semgrep.run_scan - VERBOSE - running 1250 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-05-14 00:11:40,174 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-05-14 00:11:40,177 - semgrep.run_scan - VERBOSE - Rules:
2025-05-14 00:11:40,177 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-05-14 00:11:41,016 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-05-14 00:11:41,367 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-05-14 00:11:41,367 - semgrep.core_runner - DEBUG - /tmp/_MEINoRJhW/semgrep/bin/opengrep-core -json -rules /tmp/tmpba1slsh7.json -j 8 -targets /tmp/tmpykxxmjd7 -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-05-14 00:12:01,770 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.08][[34mINFO[0m]: Executed as: /tmp/_MEINoRJhW/semgrep/bin/opengrep-core -json -rules /tmp/tmpba1slsh7.json -j 8 -targets /tmp/tmpykxxmjd7 -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.08][[34mINFO[0m]: Version: 1.2.0
[00.08][[34mINFO[0m]: Parsing rules in /tmp/tmpba1slsh7.json
[00.87][[34mINFO[0m]: scan: processing 616 files (skipping 0), with 487 rules (skipping 0 )
[02.24][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring file: server/routes/file-upload-new.ts func: ???]
[0m[02.58][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename file: server/routes/file-upload-new.ts func: ???]
[0m[02.84][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/insurance-providers.ts func: ???]
[0m[03.70][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal file: server/utils/csv-processor.ts func: processCsvFile:32425]
[0m[03.79][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring file: server/utils/csv-processor.ts func: processCsvFile:32425]
[0m[03.94][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/xl-video-upload.ts func: ???]
[0m[04.00][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/xl-video-upload.ts func: ???]
[0m[04.58][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.sqli.node-postgres-sqli file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[04.84][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[05.32][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.tainted-sql-string file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[05.52][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename file: server/utils/csv-processor.ts func: processCsvFile:32425]
[0m[05.68][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.res-render-injection file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[05.89][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[06.27][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/raw-upload.ts func: ???]
[0m[06.42][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: client/src/components/admin/LocationsList.tsx func: LocationsList:39246]
[0m[06.44][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.typescript.react.security.audit.react-href-var file: client/src/pages/SimpleAdminPage.tsx func: SimpleAdminPage:53080]
[0m[06.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/raw-upload.ts func: ???]
[0m[06.81][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal file: client/src/pages/auth-page.tsx func: AuthPage:58132]
[0m[06.88][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/raw-upload.ts func: ???]
[0m[06.97][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes/raw-upload.ts func: ???]
[0m[07.43][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal file: server/routes/csv-import.ts func: ???]
[0m[07.60][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/csv-import.ts func: ???]
[0m[07.83][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/center-management.ts func: ???]
[0m[08.06][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/center-management.ts func: ???]
[0m[08.18][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/csv-import.ts func: ???]
[0m[08.26][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/center-management.ts func: ???]
[0m[08.62][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.express-path-join-resolve-traversal file: server/routes/csv-import.ts func: ???]
[0m[08.81][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/csv-import.ts func: ???]
[0m[08.94][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection file: client/src/pages/PriceDatabase.tsx func: PriceDatabase:84523]
[0m[09.03][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/csv-import.ts func: ???]
[0m[09.20][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.tainted-sql-string file: server/routes/center-management.ts func: ???]
[0m[09.21][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes/csv-import.ts func: ???]
[0m[09.39][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.tainted-sql-string file: server/routes/center-management.ts func: ???]
[0m[09.46][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.typescript.react.security.audit.react-href-var file: client/src/pages/ImportSpreadsheet.tsx func: ImportSpreadsheet:95105]
[0m[09.68][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/pages/ImportSpreadsheet.tsx func: ImportSpreadsheet:95105]
[0m[09.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.sqli.node-postgres-sqli file: client/src/pages/AdminSectionPage.tsx func: AdminSectionPage:98673]
[0m[09.92][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/pages/AdminSectionPage.tsx func: AdminSectionPage:98673]
[0m[10.46][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/center-management.ts func: ???]
[0m[10.62][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.express-ssrf file: client/src/pages/ImportSpreadsheet.tsx func: ImportSpreadsheet:95105]
[0m[11.04][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: client/src/pages/AdminInsuranceProvidersPage.tsx func: AdminInsuranceProvidersPage:117773]
[0m[11.08][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.express-path-join-resolve-traversal file: server/routes/large-video-upload.ts func: ???]
[0m[11.15][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.express-path-join-resolve-traversal file: server/routes/large-video-upload.ts func: ???]
[0m[11.22][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/large-video-upload.ts func: ???]
[0m[11.28][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/large-video-upload.ts func: ???]
[0m[11.39][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/large-video-upload.ts func: ???]
[0m[11.47][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes/large-video-upload.ts func: ???]
[0m[11.70][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/pages/AdminStaffPage.tsx func: AdminStaffPage:125937]
[0m[11.91][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/center-management.ts func: ???]
[0m[12.09][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.typescript.react.security.audit.react-href-var file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[12.77][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[12.83][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/center-management.ts func: ???]
[0m[12.95][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.detect-eval-with-expression file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[13.11][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.tainted-sql-string file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[13.23][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.browser.security.js-open-redirect-from-function file: client/src/pages/AdminStaffPage.tsx func: AdminStaffPage:125937]
[0m[13.33][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[13.50][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal file: server/routes/video-upload.ts func: ???]
[0m[13.55][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[13.61][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/video-upload.ts func: ???]
[0m[13.80][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename file: server/routes/video-upload.ts func: ???]
[0m[13.97][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.browser.security.js-open-redirect-from-function file: client/src/pages/HomePage.tsx func: HomePage:130800]
[0m[13.97][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/video-upload.ts func: ???]
[0m[14.09][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.xss.direct-response-write file: server/routes/video-upload.ts func: ???]
[0m[14.17][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection file: server/routes/video-upload.ts func: ???]
[0m[14.41][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.express-path-join-resolve-traversal file: server/routes/video-upload.ts func: ???]
[0m[14.49][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/video-upload.ts func: ???]
[0m[14.55][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/video-upload.ts func: ???]
[0m[14.68][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes/video-upload.ts func: ???]
[0m[15.71][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/center-management.ts func: ???]
[0m[17.63][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/center-management.ts func: ???]
[0m[19.04][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes/center-management.ts func: ???]
[0m[20.35][[34mINFO[0m]: Custom ignore pattern: None
[20.35][[34mINFO[0m]: Custom ignore pattern: None
--- end semgrep-core stderr ---
2025-05-14 00:12:01,783 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-05-14 00:12:01,783 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-14 00:12:01,784 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-14 00:12:01,784 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-14 00:12:01,785 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/components/admin/StaffList.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = aee1e615919dd7a89b4b0f62a449099eec8c3c7d0fb0fad30e826ad66d484a1237b268917a41c98996f5b415f447626dfc41dffcffa32e7f2924d021e8dfa7d4_0
2025-05-14 00:12:01,785 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending PATCH request to /api/center/staff/id $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending PATCH request to /api/center/staff/id,data,...)\n console.log(`Sending PATCH request to /api/center/staff/id,data,...)\n', PosixPath('client/src/components/admin/StaffList.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 8e9a86e621b67c96596aca63fbbedae52c90b3ff325f1749d88f0fa58b46a953865482a29c019991982fc7d1a02d64401d647641c2ccc10a07be51dadf445c09_0
2025-05-14 00:12:01,786 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending PATCH request to /api/center/staff/id $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending PATCH request to /api/center/staff/id,data,...)\n console.log(`Sending PATCH request to /api/center/staff/id,data,...)\n', PosixPath('client/src/components/admin/StaffList.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 8e9a86e621b67c96596aca63fbbedae52c90b3ff325f1749d88f0fa58b46a953865482a29c019991982fc7d1a02d64401d647641c2ccc10a07be51dadf445c09_0
2025-05-14 00:12:01,786 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending PATCH request to /api/center/staff/id $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending PATCH request to /api/center/staff/id,data,...)\n console.log(`Sending PATCH request to /api/center/staff/id,data,...)\n', PosixPath('client/src/components/admin/StaffList.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 8e9a86e621b67c96596aca63fbbedae52c90b3ff325f1749d88f0fa58b46a953865482a29c019991982fc7d1a02d64401d647641c2ccc10a07be51dadf445c09_0
2025-05-14 00:12:01,787 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,787 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending method request to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending method request to url,requestData,...)\n console.log(`Sending method request to url,requestData,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3b3167a4513ba0d7c5bafd08123cfac6292f2bf6e2e3706319802570fc409a56ee6adcd79e5dba49532b3dd839a8eba1e50264c7a9891c0fa300e7897afb5918_0
2025-05-14 00:12:01,788 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending method request to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending method request to url,requestData,...)\n console.log(`Sending method request to url,requestData,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3b3167a4513ba0d7c5bafd08123cfac6292f2bf6e2e3706319802570fc409a56ee6adcd79e5dba49532b3dd839a8eba1e50264c7a9891c0fa300e7897afb5918_0
2025-05-14 00:12:01,788 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Sending method request to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Sending method request to url,requestData,...)\n console.log(`Sending method request to url,requestData,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3b3167a4513ba0d7c5bafd08123cfac6292f2bf6e2e3706319802570fc409a56ee6adcd79e5dba49532b3dd839a8eba1e50264c7a9891c0fa300e7897afb5918_0
2025-05-14 00:12:01,789 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,789 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status): $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status):,text,...)\n console.error(`API Error (res.status):,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 15fbe011e5e94b65b8655aed26d827572a2b15faa7c23e8b85b91b7b8cddf2ccfc788b543d374df6e45bb7ad5165f8ac33d4b01a9fc97392a025e4dea2ca847a_0
2025-05-14 00:12:01,790 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status): $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status):,text,...)\n console.error(`API Error (res.status):,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 15fbe011e5e94b65b8655aed26d827572a2b15faa7c23e8b85b91b7b8cddf2ccfc788b543d374df6e45bb7ad5165f8ac33d4b01a9fc97392a025e4dea2ca847a_0
2025-05-14 00:12:01,790 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status): $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status):,text,...)\n console.error(`API Error (res.status):,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 15fbe011e5e94b65b8655aed26d827572a2b15faa7c23e8b85b91b7b8cddf2ccfc788b543d374df6e45bb7ad5165f8ac33d4b01a9fc97392a025e4dea2ca847a_0
2025-05-14 00:12:01,791 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,791 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetching data from: url $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetching data from: url,queryKey,...)\n console.log(`Fetching data from: url,queryKey,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 76b84d6da8e72e6efd3b15b9738f8ab5181168d88f86c75d8c8acf6684fc62d23e092c51f05e4d93a254751d4e719f5ce9455b4c875286cf20d625b6e8719ae1_0
2025-05-14 00:12:01,792 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetching data from: url $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetching data from: url,queryKey,...)\n console.log(`Fetching data from: url,queryKey,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 76b84d6da8e72e6efd3b15b9738f8ab5181168d88f86c75d8c8acf6684fc62d23e092c51f05e4d93a254751d4e719f5ce9455b4c875286cf20d625b6e8719ae1_0
2025-05-14 00:12:01,792 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetching data from: url $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetching data from: url,queryKey,...)\n console.log(`Fetching data from: url,queryKey,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 76b84d6da8e72e6efd3b15b9738f8ab5181168d88f86c75d8c8acf6684fc62d23e092c51f05e4d93a254751d4e719f5ce9455b4c875286cf20d625b6e8719ae1_0
2025-05-14 00:12:01,793 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,793 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status) from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status) from url:,text,...)\n console.error(`API Error (res.status) from url:,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ea8150d6c6eefb6f277494b8aa356d752a11d30522aa77df6c35c3630b39427e5cc3ab88fba40cc6d8970336486425776de7fa743d41e926111c9160f7996806_0
2025-05-14 00:12:01,794 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status) from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status) from url:,text,...)\n console.error(`API Error (res.status) from url:,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ea8150d6c6eefb6f277494b8aa356d752a11d30522aa77df6c35c3630b39427e5cc3ab88fba40cc6d8970336486425776de7fa743d41e926111c9160f7996806_0
2025-05-14 00:12:01,794 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `API Error (res.status) from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`API Error (res.status) from url:,text,...)\n console.error(`API Error (res.status) from url:,text,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ea8150d6c6eefb6f277494b8aa356d752a11d30522aa77df6c35c3630b39427e5cc3ab88fba40cc6d8970336486425776de7fa743d41e926111c9160f7996806_0
2025-05-14 00:12:01,795 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,795 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Received data from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Received data from url:,data,...)\n console.log(`Received data from url:,data,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 13edca3d597ad0374ad451c28bdf361b8fb28e7e41c0b753ce5e9c2f3a77efea81b6fe81608e01868408b0f84eeb60bf3702663b2f792ec57990fe54b460cb21_0
2025-05-14 00:12:01,796 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Received data from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Received data from url:,data,...)\n console.log(`Received data from url:,data,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 13edca3d597ad0374ad451c28bdf361b8fb28e7e41c0b753ce5e9c2f3a77efea81b6fe81608e01868408b0f84eeb60bf3702663b2f792ec57990fe54b460cb21_0
2025-05-14 00:12:01,796 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Received data from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Received data from url:,data,...)\n console.log(`Received data from url:,data,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 13edca3d597ad0374ad451c28bdf361b8fb28e7e41c0b753ce5e9c2f3a77efea81b6fe81608e01868408b0f84eeb60bf3702663b2f792ec57990fe54b460cb21_0
2025-05-14 00:12:01,797 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 37fb4f5b35ad6aa056d6f0ce56ce24e394a686ee4a197c0c17c2ba58da9a8f2a5c4e30542c5db4df3306bb8ce2afc85d93269072fb72a6397a91fc3e8ee5b157_0
2025-05-14 00:12:01,797 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching from url:,error,...)\n console.error(`Error fetching from url:,error,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ddd25573db7257f17c018a2854dd73d5319cb7cb0fb75974157ab8119e5418c256f84718ca5fdf963d3674e6c0c150ac8fc179806d9e3827f9d167b2143a97e3_0
2025-05-14 00:12:01,797 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching from url:,error,...)\n console.error(`Error fetching from url:,error,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ddd25573db7257f17c018a2854dd73d5319cb7cb0fb75974157ab8119e5418c256f84718ca5fdf963d3674e6c0c150ac8fc179806d9e3827f9d167b2143a97e3_0
2025-05-14 00:12:01,798 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching from url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching from url:,error,...)\n console.error(`Error fetching from url:,error,...)\n', PosixPath('client/src/lib/queryClient.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ddd25573db7257f17c018a2854dd73d5319cb7cb0fb75974157ab8119e5418c256f84718ca5fdf963d3674e6c0c150ac8fc179806d9e3827f9d167b2143a97e3_0
2025-05-14 00:12:01,798 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/login.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = b4b2210f813bd853fe86911448b150fc5ef6e73c45b122562072a2feecd995c90d41e328894a4b79fecf88676baac35502c769ab44f8b50bd02f85ab6250fd79_0
2025-05-14 00:12:01,799 - semgrep.rule_match - DEBUG - match_key = (' rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" > <script  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" >...</script>', PosixPath('client/src/login.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = b9f2d6948a9c298f4bd3fd754bb1f1d05cb57bbc34c7a39a518c26dc7d1f6ec5cb8e09136694e2a586605e4073055d4d581225fd6df28a3822b3e58fe455e6af_0
2025-05-14 00:12:01,799 - semgrep.rule_match - DEBUG - match_key = (' rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" > <script  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" >...</script>', PosixPath('client/src/login.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = b9f2d6948a9c298f4bd3fd754bb1f1d05cb57bbc34c7a39a518c26dc7d1f6ec5cb8e09136694e2a586605e4073055d4d581225fd6df28a3822b3e58fe455e6af_0
2025-05-14 00:12:01,800 - semgrep.rule_match - DEBUG - match_key = (' rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" > <script  rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" >...</script>', PosixPath('client/src/login.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = b9f2d6948a9c298f4bd3fd754bb1f1d05cb57bbc34c7a39a518c26dc7d1f6ec5cb8e09136694e2a586605e4073055d4d581225fd6df28a3822b3e58fe455e6af_0
2025-05-14 00:12:01,800 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/pages/AdminStaffPage.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = b6320b83000092103b7b9d3e35e1872e4f5b67be38e9a0d9111cf473b97955b34aef171fbc370c2bf4474777ac10c1c4850951a072190583230ce65ebef714c6_0
2025-05-14 00:12:01,800 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Submitting update with method PATCH to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Submitting update with method PATCH to url,values,...)\n console.log(`Submitting update with method PATCH to url,values,...)\n', PosixPath('client/src/pages/AdminStaffPage.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 5957a7efe4948f271f74a705be31152477a3dfc4a1cca3a3aac37f40318333186d9baad674695c11b5fe0bfc17cfe8795f5ffbdcd7d4b96b417faa706329bed2_0
2025-05-14 00:12:01,801 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Submitting update with method PATCH to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Submitting update with method PATCH to url,values,...)\n console.log(`Submitting update with method PATCH to url,values,...)\n', PosixPath('client/src/pages/AdminStaffPage.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 5957a7efe4948f271f74a705be31152477a3dfc4a1cca3a3aac37f40318333186d9baad674695c11b5fe0bfc17cfe8795f5ffbdcd7d4b96b417faa706329bed2_0
2025-05-14 00:12:01,801 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Submitting update with method PATCH to url $UTIL = require(\'util\')\n...\n $UTIL.format(`Submitting update with method PATCH to url,values,...)\n console.log(`Submitting update with method PATCH to url,values,...)\n', PosixPath('client/src/pages/AdminStaffPage.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 5957a7efe4948f271f74a705be31152477a3dfc4a1cca3a3aac37f40318333186d9baad674695c11b5fe0bfc17cfe8795f5ffbdcd7d4b96b417faa706329bed2_0
2025-05-14 00:12:01,802 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/pages/AuthTestPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = a870a543160751fcfc56ef77ab77aaad4db46c30a0e009f50f97b38bf528f6f007d809bb82b2ec3ef12982dff8cce42a7deccc2847d078df742e15282a46599d_0
2025-05-14 00:12:01,802 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/AuthTestPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = f00e2c1b7270246ea869f02d7a2fe8f9fc350a9fafae7e1bff8eb0217416e86d0ea22615e779d1831f0a54ae61489b0181185769e3cfae70f508878a2a1ec087_0
2025-05-14 00:12:01,803 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/AuthTestPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = f00e2c1b7270246ea869f02d7a2fe8f9fc350a9fafae7e1bff8eb0217416e86d0ea22615e779d1831f0a54ae61489b0181185769e3cfae70f508878a2a1ec087_0
2025-05-14 00:12:01,803 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/AuthTestPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = f00e2c1b7270246ea869f02d7a2fe8f9fc350a9fafae7e1bff8eb0217416e86d0ea22615e779d1831f0a54ae61489b0181185769e3cfae70f508878a2a1ec087_0
2025-05-14 00:12:01,803 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ea225469d93f007a814b58bb58dd632f0034f36e1018b1ff7be666ebc9be5359e88ae90426e79ccdddf756590ac0467f6d31dd7e6e9a3382efbd9694ee1f8012_0
2025-05-14 00:12:01,804 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetch attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetch attempt retryCount failed:,fetchError,...)\n console.error(`Fetch attempt retryCount failed:,fetchError,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = f12bed27b0248264749b4039086dc915d784a8b63bde67a77a33d5cc83654fa4b568f481761edf33a809e288b5511716c798bddfc73199d8ce9189d206226652_0
2025-05-14 00:12:01,804 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetch attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetch attempt retryCount failed:,fetchError,...)\n console.error(`Fetch attempt retryCount failed:,fetchError,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = f12bed27b0248264749b4039086dc915d784a8b63bde67a77a33d5cc83654fa4b568f481761edf33a809e288b5511716c798bddfc73199d8ce9189d206226652_0
2025-05-14 00:12:01,805 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Fetch attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Fetch attempt retryCount failed:,fetchError,...)\n console.error(`Fetch attempt retryCount failed:,fetchError,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = f12bed27b0248264749b4039086dc915d784a8b63bde67a77a33d5cc83654fa4b568f481761edf33a809e288b5511716c798bddfc73199d8ce9189d206226652_0
2025-05-14 00:12:01,805 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = ea225469d93f007a814b58bb58dd632f0034f36e1018b1ff7be666ebc9be5359e88ae90426e79ccdddf756590ac0467f6d31dd7e6e9a3382efbd9694ee1f8012_0
2025-05-14 00:12:01,806 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Chunk upload attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Chunk upload attempt retryCount failed:,error,...)\n console.error(`Chunk upload attempt retryCount failed:,error,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2c08b81b4f28007fb90cc4e118d2c02ce73d8e954f4f31085204f6df6794e05facdc31dc3155e4d1c0512b804fc346cbaad19dbf59a2b25c03bb193f2e0918c0_0
2025-05-14 00:12:01,806 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Chunk upload attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Chunk upload attempt retryCount failed:,error,...)\n console.error(`Chunk upload attempt retryCount failed:,error,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2c08b81b4f28007fb90cc4e118d2c02ce73d8e954f4f31085204f6df6794e05facdc31dc3155e4d1c0512b804fc346cbaad19dbf59a2b25c03bb193f2e0918c0_0
2025-05-14 00:12:01,807 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Chunk upload attempt retryCount failed: $UTIL = require(\'util\')\n...\n $UTIL.format(`Chunk upload attempt retryCount failed:,error,...)\n console.error(`Chunk upload attempt retryCount failed:,error,...)\n', PosixPath('client/src/pages/ImportSpreadsheet.tsx'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2c08b81b4f28007fb90cc4e118d2c02ce73d8e954f4f31085204f6df6794e05facdc31dc3155e4d1c0512b804fc346cbaad19dbf59a2b25c03bb193f2e0918c0_0
2025-05-14 00:12:01,807 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/src/pages/LoginPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = c4df23f9925e8138abaccebe14738afcfcb5b9f86d476694e5989a2932e3d837f334e045a2606e27b9189e657c1b031eaf0c5931ce068457e7b7b0f0465e37f6_0
2025-05-14 00:12:01,807 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/LoginPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = a21b0b0a48d6c2b714f47ae0a67eba46da5a6047a8ac96033a1e9ed8e0b551032fde9c7640c4cf617a0dc5f29e5f66986e457e502f3dca590046f42b42f15cb3_0
2025-05-14 00:12:01,808 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/LoginPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = a21b0b0a48d6c2b714f47ae0a67eba46da5a6047a8ac96033a1e9ed8e0b551032fde9c7640c4cf617a0dc5f29e5f66986e457e502f3dca590046f42b42f15cb3_0
2025-05-14 00:12:01,808 - semgrep.rule_match - DEBUG - match_key = ('(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|\']|[\\s|"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:\'|\\"|\\s|=|\\x60){0,5}("[a-z0-9=_\\-]{8,20}")(?:[\'|\\"|\\n|\\r|\\s|\\x60|;]|$)', PosixPath('client/src/pages/LoginPage.tsx'), 'config..semgrep.vendored-rules.generic.secrets.gitleaks.hashicorp-tf-password') match_id = a21b0b0a48d6c2b714f47ae0a67eba46da5a6047a8ac96033a1e9ed8e0b551032fde9c7640c4cf617a0dc5f29e5f66986e457e502f3dca590046f42b42f15cb3_0
2025-05-14 00:12:01,809 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/basic-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = e55e64d40d93aadee6e9bb5aecbc680974bbb352e74becd432ea28317d656351c011804db6ff67a86999e337ad3bfe659adf85903d5d406853bc4387c69c6b14_0
2025-05-14 00:12:01,810 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n  </script>\n', PosixPath('public/basic-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 740a86269032ac3e96768d870f23ed16360b6a1e6d2b4b869916f8b0498e7da9dff5ac2fd7fdd5cfea12bbc064f69da99ea30c2e5f1c9e0d50132dd83e00ad1f_0
2025-05-14 00:12:01,812 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n  </script>\n', PosixPath('public/basic-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 740a86269032ac3e96768d870f23ed16360b6a1e6d2b4b869916f8b0498e7da9dff5ac2fd7fdd5cfea12bbc064f69da99ea30c2e5f1c9e0d50132dd83e00ad1f_0
2025-05-14 00:12:01,813 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      const xhr = new XMLHttpRequest();\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      xhr.open(\'POST\', \'/api/simple-upload/image\', true);\n      \n      xhr.onload = function() {\n        console.log(\'Response received:\', xhr.status);\n        console.log(\'Response headers:\', xhr.getAllResponseHeaders());\n        console.log(\'Response text:\', xhr.responseText);\n        \n        if (xhr.status === 201) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resultDiv.innerHTML = `\n              <p class="success">Upload successful!</p>\n              <p>File name: ${data.file.filename}</p>\n              <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n              <img src="${data.file.path}" alt="Uploaded image">\n            `;\n          } catch (e) {\n            console.error(\'JSON parse error:\', e);\n            resultDiv.innerHTML = `\n              <p class="error">Error parsing response: ${e.message}</p>\n              <p>Raw response:</p>\n              <pre style="max-height: 200px; overflow: auto; background: #f0f0f0; padding: 10px; border: 1px solid #ddd;">${xhr.responseText.substring(0, 500)}${xhr.responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            `;\n          }\n        } else {\n          let errorMsg;\n          try {\n            const error = JSON.parse(xhr.responseText);\n            errorMsg = error.error || error.message || \'Unknown error\';\n          } catch (e) {\n            errorMsg = `Status ${xhr.status}: ${xhr.statusText}`;\n            if (xhr.responseText) {\n              errorMsg += `\\nResponse starts with: ${xhr.responseText.substring(0, 100)}...`;\n            }\n          }\n          \n          resultDiv.innerHTML = `<p class="error">Upload failed: ${errorMsg}</p>`;\n        }\n      };\n      \n      xhr.onerror = function() {\n        resultDiv.innerHTML = \'<p class="error">Network error occurred</p>\';\n      };\n      \n      // Just send the file directly as the request body\n      xhr.send(file);\n    });\n  </script>\n', PosixPath('public/basic-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 740a86269032ac3e96768d870f23ed16360b6a1e6d2b4b869916f8b0498e7da9dff5ac2fd7fdd5cfea12bbc064f69da99ea30c2e5f1c9e0d50132dd83e00ad1f_0
2025-05-14 00:12:01,815 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/direct-upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 8aae8dbd4ec8efaa5c61c2a9c7613ae070da117e5b74593422a7b930ee89d160e796e3dd7f37f34223ff0a51659dd1836e7604eae0bc51c4a1fcebb9e82c251e_0
2025-05-14 00:12:01,815 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/direct-upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = dd5ad80628ec54f54d8e9d907d0b878732bb87560ca9edade009ba4c08ecb4396bbe2d05d320dd4f97541891cc304f7247a6619da2dc60296ecad46dc3fd7fbb_0
2025-05-14 00:12:01,816 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/direct-upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = dd5ad80628ec54f54d8e9d907d0b878732bb87560ca9edade009ba4c08ecb4396bbe2d05d320dd4f97541891cc304f7247a6619da2dc60296ecad46dc3fd7fbb_0
2025-05-14 00:12:01,818 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/direct-upload/image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                let data;\n                try {\n                    data = await response.json();\n                } catch (e) {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Invalid JSON response: ${e.message}</p>\n                        <pre>${await response.text()}</pre>\n                    `;\n                    return;\n                }\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/direct-upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = dd5ad80628ec54f54d8e9d907d0b878732bb87560ca9edade009ba4c08ecb4396bbe2d05d320dd4f97541891cc304f7247a6619da2dc60296ecad46dc3fd7fbb_0
2025-05-14 00:12:01,819 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/direct-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 06db7f39b346d55210388610767f6ee589ac7f05b6827f8aacc2cb3fc0f9454096e2f27363a10a47274e40ff9cf4d5730fc88cafab293c796421bf680cebe443_0
2025-05-14 00:12:01,820 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('public/direct-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 4bdb64be15b15cdff1ff9bf7c1e1b745f99776c5d3223427157862a79c1c148b131193b03350988a5b6f659534bcd60b9693ba8582ebfc7a873c983961304157_0
2025-05-14 00:12:01,821 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('public/direct-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 4bdb64be15b15cdff1ff9bf7c1e1b745f99776c5d3223427157862a79c1c148b131193b03350988a5b6f659534bcd60b9693ba8582ebfc7a873c983961304157_0
2025-05-14 00:12:01,822 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('public/direct-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 4bdb64be15b15cdff1ff9bf7c1e1b745f99776c5d3223427157862a79c1c148b131193b03350988a5b6f659534bcd60b9693ba8582ebfc7a873c983961304157_0
2025-05-14 00:12:01,823 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.python.django.security.django-no-csrf-token') match_id = 68bcdb74a269ad6e667a7657c43946fa281095b47b23214011df7aa17a9c07f4ea75942bcd9cd22fd5888781965a18b6ddd8b4aa32a90564be5fb153e121ef26_0
2025-05-14 00:12:01,824 - semgrep.rule_match - DEBUG - match_key = ('post (?i)(post|put|delete|patch) <form ... method="post" ...>...</form>\n <form ... method=post ...>...</form>\n <form ... method=\'post\' ...>...</form>\n <form...>...</form> <form...>...{% csrf_token %}...</form> <form...>...{{ $VAR.csrf_token }}...</form>', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.python.django.security.django-no-csrf-token') match_id = 4258225feeb7a06a379243d618d1ad95fec5962cb87cd3abdd5f444a2d4239b216826d81b65949bc884c0f66e932131ce9c1f20fe6c81cfd41846a8d80b514be_0
2025-05-14 00:12:01,824 - semgrep.rule_match - DEBUG - match_key = ('post (?i)(post|put|delete|patch) <form ... method="post" ...>...</form>\n <form ... method=post ...>...</form>\n <form ... method=\'post\' ...>...</form>\n <form...>...</form> <form...>...{% csrf_token %}...</form> <form...>...{{ $VAR.csrf_token }}...</form>', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.python.django.security.django-no-csrf-token') match_id = 4258225feeb7a06a379243d618d1ad95fec5962cb87cd3abdd5f444a2d4239b216826d81b65949bc884c0f66e932131ce9c1f20fe6c81cfd41846a8d80b514be_0
2025-05-14 00:12:01,824 - semgrep.rule_match - DEBUG - match_key = ('post (?i)(post|put|delete|patch) <form ... method="post" ...>...</form>\n <form ... method=post ...>...</form>\n <form ... method=\'post\' ...>...</form>\n <form...>...</form> <form...>...{% csrf_token %}...</form> <form...>...{{ $VAR.csrf_token }}...</form>', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.python.django.security.django-no-csrf-token') match_id = 4258225feeb7a06a379243d618d1ad95fec5962cb87cd3abdd5f444a2d4239b216826d81b65949bc884c0f66e932131ce9c1f20fe6c81cfd41846a8d80b514be_0
2025-05-14 00:12:01,825 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = af9957bd1c6c20238a903f4c0760379496059f355019d81ee30b17ca8c756af83711c479a9dc621095a4712e78c403d45af8e535e0110c7170092f8af657ed2c_0
2025-05-14 00:12:01,826 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n  </script>\n', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 109e8c1d24bc7119d3e63c8f5d0fff16d328617a20a53f9af03b94750815c3149bc21448f388a648ba19e26b10aee3363b24a2134c0be35daf5715543f31ea52_0
2025-05-14 00:12:01,826 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n  </script>\n', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 109e8c1d24bc7119d3e63c8f5d0fff16d328617a20a53f9af03b94750815c3149bc21448f388a648ba19e26b10aee3363b24a2134c0be35daf5715543f31ea52_0
2025-05-14 00:12:01,827 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadForm\').addEventListener(\'submit\', function(e) {\n      e.preventDefault();\n      \n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'image\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const formData = new FormData(this);\n      \n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      fetch(this.action, {\n        method: \'POST\',\n        body: formData\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\'Success:\', data);\n        resultDiv.innerHTML = `\n          <p class="success">Upload successful!</p>\n          <p>File name: ${data.file.filename}</p>\n          <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n          <img src="${data.file.path}" alt="Uploaded image">\n        `;\n      })\n      .catch(error => {\n        console.error(\'Error:\', error);\n        resultDiv.innerHTML = `<p class="error">Upload failed: ${error.message}</p>`;\n      });\n    });\n  </script>\n', PosixPath('public/simple-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 109e8c1d24bc7119d3e63c8f5d0fff16d328617a20a53f9af03b94750815c3149bc21448f388a648ba19e26b10aee3363b24a2134c0be35daf5715543f31ea52_0
2025-05-14 00:12:01,828 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('public/upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 178c7d6bc6ca5e486c960dacc7cb6e08393c0ec40b9e4a97c79972da3898f5bc486422955a6e27541b2dceda57ef56b1355f80eda4fa5b91b0d95345ac718f47_0
2025-05-14 00:12:01,829 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = f3f2af8713c1c078281ca4825e3632d1370658f6782d5b6b2a9c12cde41ab242f82ee0b22a23d53cdd24a9cf5c565d600efe1f3f00db3a2613b577ad62bba39b_0
2025-05-14 00:12:01,830 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = f3f2af8713c1c078281ca4825e3632d1370658f6782d5b6b2a9c12cde41ab242f82ee0b22a23d53cdd24a9cf5c565d600efe1f3f00db3a2613b577ad62bba39b_0
2025-05-14 00:12:01,830 - semgrep.rule_match - DEBUG - match_key = ('\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n     $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n        document.getElementById(\'uploadForm\').addEventListener(\'submit\', async function(e) {\n            e.preventDefault();\n            \n            const resultDiv = document.getElementById(\'result\');\n            const previewDiv = document.getElementById(\'preview\');\n            const imageFile = document.getElementById(\'imageFile\').files[0];\n            \n            if (!imageFile) {\n                resultDiv.innerHTML = \'<p style="color: red;">Please select a file to upload</p>\';\n                return;\n            }\n            \n            const formData = new FormData();\n            formData.append(\'image\', imageFile);\n            \n            resultDiv.innerHTML = \'<p>Uploading...</p>\';\n            \n            try {\n                const response = await fetch(\'/api/file/upload-image\', {\n                    method: \'POST\',\n                    body: formData\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    resultDiv.innerHTML = `\n                        <p style="color: green;">Upload successful!</p>\n                        <p>Filename: ${data.file.filename}</p>\n                        <p>Size: ${data.file.size} bytes</p>\n                        <p>URL: ${data.file.path}</p>\n                    `;\n                    \n                    previewDiv.innerHTML = `<img src="${data.file.path}" alt="Uploaded image">`;\n                } else {\n                    resultDiv.innerHTML = `\n                        <p style="color: red;">Upload failed: ${data.error || data.message || \'Unknown error\'}</p>\n                        <p>Details: ${data.details || \'\'}</p>\n                    `;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;\n            }\n        });\n    </script>\n', PosixPath('public/upload-test.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = f3f2af8713c1c078281ca4825e3632d1370658f6782d5b6b2a9c12cde41ab242f82ee0b22a23d53cdd24a9cf5c565d600efe1f3f00db3a2613b577ad62bba39b_0
2025-05-14 00:12:01,831 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/db-storage.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 66482f481bb35c2bcbfb4cffadd9a38b6f1390eb6601b92743a548d50ecf6533d2fffb39e35917b7f3fd7fb9379bdcaf08a402643fdcd2560e4044b17ddfbb32_0
2025-05-14 00:12:01,832 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error calculating market comparison for sale sale.id: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error calculating market comparison for sale sale.id:,error,...)\n console.error(`Error calculating market comparison for sale sale.id:,error,...)\n', PosixPath('server/db-storage.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 04f54aff00ce03dde4e833b5a3ff1a97f3893bc7920fb98f1f41c3f5789ec2e4ea6f36851d8321c4dde6cae81c5b36d6fc5f73c2be9299aa5f24338e6e15ddb1_0
2025-05-14 00:12:01,832 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error calculating market comparison for sale sale.id: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error calculating market comparison for sale sale.id:,error,...)\n console.error(`Error calculating market comparison for sale sale.id:,error,...)\n', PosixPath('server/db-storage.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 04f54aff00ce03dde4e833b5a3ff1a97f3893bc7920fb98f1f41c3f5789ec2e4ea6f36851d8321c4dde6cae81c5b36d6fc5f73c2be9299aa5f24338e6e15ddb1_0
2025-05-14 00:12:01,833 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error calculating market comparison for sale sale.id: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error calculating market comparison for sale sale.id:,error,...)\n console.error(`Error calculating market comparison for sale sale.id:,error,...)\n', PosixPath('server/db-storage.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 04f54aff00ce03dde4e833b5a3ff1a97f3893bc7920fb98f1f41c3f5789ec2e4ea6f36851d8321c4dde6cae81c5b36d6fc5f73c2be9299aa5f24338e6e15ddb1_0
2025-05-14 00:12:01,833 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/index.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 90ef6dd8bf3ebf9fa0ce0f5eaee0b53ba6deb8645991781820851ac7cb8c89cc8221427658623d3516a1d8d64ab047ad1434dcec3d73cee2453889cfb14d82e8_0
2025-05-14 00:12:01,834 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Upload request to req.url had an error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Upload request to req.url had an error:,err,...)\n console.error(`Upload request to req.url had an error:,err,...)\n', PosixPath('server/index.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3a5f992838945c8f81a71adb91d1578c865c0c093992d030391b4db18e766e1e736cbf9bdc2ec987181b2a3be4de0debea380e773246cb94685d8d97c6f1ca10_0
2025-05-14 00:12:01,834 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Upload request to req.url had an error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Upload request to req.url had an error:,err,...)\n console.error(`Upload request to req.url had an error:,err,...)\n', PosixPath('server/index.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3a5f992838945c8f81a71adb91d1578c865c0c093992d030391b4db18e766e1e736cbf9bdc2ec987181b2a3be4de0debea380e773246cb94685d8d97c6f1ca10_0
2025-05-14 00:12:01,835 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Upload request to req.url had an error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Upload request to req.url had an error:,err,...)\n console.error(`Upload request to req.url had an error:,err,...)\n', PosixPath('server/index.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 3a5f992838945c8f81a71adb91d1578c865c0c093992d030391b4db18e766e1e736cbf9bdc2ec987181b2a3be4de0debea380e773246cb94685d8d97c6f1ca10_0
2025-05-14 00:12:01,835 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 1716819391dbcde537f9338835a598046cb37cad98391428948723ef10658c9693c09f85e42d4df3f4bb54cffe371deda4a006a80206809ae92da5a18106ce89_0
2025-05-14 00:12:01,836 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_0
2025-05-14 00:12:01,836 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_0
2025-05-14 00:12:01,837 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_0
2025-05-14 00:12:01,837 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 1716819391dbcde537f9338835a598046cb37cad98391428948723ef10658c9693c09f85e42d4df3f4bb54cffe371deda4a006a80206809ae92da5a18106ce89_0
2025-05-14 00:12:01,838 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_0
2025-05-14 00:12:01,838 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_0
2025-05-14 00:12:01,839 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Attempting to update location locationId with data: $UTIL = require(\'util\')\n...\n $UTIL.format(`Attempting to update location locationId with data:,locationData,...)\n console.log(`Attempting to update location locationId with data:,locationData,...)\n', PosixPath('server/routes/center-management.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 09664b5719feffb5024e94c98a66e8667e09ec3d389e50f97f466b04e4786e78451545d9ba910c2fa0704fc161fd89a0f7fd43f5c96bfe334aa36cc4d825b35f_1
2025-05-14 00:12:01,839 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3c34e536d54790f0a773501ce13cf0b00454faa98ffd93b07cdcd53b66de8a525ad62d201e840790c22bc0c02b740d575619928b48dc4f4f117569339b1098dc_0
2025-05-14 00:12:01,840 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_0
2025-05-14 00:12:01,840 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_0
2025-05-14 00:12:01,841 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_0
2025-05-14 00:12:01,841 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3c34e536d54790f0a773501ce13cf0b00454faa98ffd93b07cdcd53b66de8a525ad62d201e840790c22bc0c02b740d575619928b48dc4f4f117569339b1098dc_0
2025-05-14 00:12:01,842 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_0
2025-05-14 00:12:01,843 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_0
2025-05-14 00:12:01,843 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/direct-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d8dfa41b9a6e8951c0a7009f04b2197b1b7d3e5723e58e43a110f4909ebe725ad1180aff05a9090bca78bc070980efab276059e9f308a47c4e81086b5a0a9f2f_1
2025-05-14 00:12:01,844 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,844 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_0
2025-05-14 00:12:01,845 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_0
2025-05-14 00:12:01,845 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_0
2025-05-14 00:12:01,846 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,847 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_0
2025-05-14 00:12:01,847 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_0
2025-05-14 00:12:01,848 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 15c68439c9fde9bd3cd9f0100e10f66651e35988d4392f54fe7611d0da0ad14e88266ecd7514130a9aced8aaf71c3f7225fe32a25f18181ae82408d8863742e0_1
2025-05-14 00:12:01,849 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = ad7004ab3a55e729a808aaea2ce76039fb93d509fad4d44275d67b516c410cb1d411571aee34b763481cb4ac610ea890ac7d3c9aae9e76ab04e2e8bae720e08e_0
2025-05-14 00:12:01,849 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,850 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,850 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,851 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = ad7004ab3a55e729a808aaea2ce76039fb93d509fad4d44275d67b516c410cb1d411571aee34b763481cb4ac610ea890ac7d3c9aae9e76ab04e2e8bae720e08e_0
2025-05-14 00:12:01,852 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,852 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,852 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_1
2025-05-14 00:12:01,853 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,854 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_0
2025-05-14 00:12:01,855 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_0
2025-05-14 00:12:01,855 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_0
2025-05-14 00:12:01,856 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,856 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_0
2025-05-14 00:12:01,857 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_0
2025-05-14 00:12:01,857 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} imageFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(imageFile.tempFilePath,...) fs. ... .accessSync(imageFile.tempFilePath, ...) fs. ... .appendFile(imageFile.tempFilePath,...) fs. ... .appendFileSync(imageFile.tempFilePath, ...) fs. ... .chmod(imageFile.tempFilePath,...) fs. ... .chmodSync(imageFile.tempFilePath, ...) fs. ... .chown(imageFile.tempFilePath,...) fs. ... .chownSync(imageFile.tempFilePath, ...) fs. ... .close(imageFile.tempFilePath,...) fs. ... .closeSync(imageFile.tempFilePath, ...) fs. ... .copyFile(imageFile.tempFilePath,...) fs. ... .copyFile($SMTH, imageFile.tempFilePath,...) fs. ... .copyFileSync(imageFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, imageFile.tempFilePath, ...) fs. ... .cp(imageFile.tempFilePath, ...) fs. ... .cp($SMTH, imageFile.tempFilePath, ...) fs. ... .cpSync(imageFile.tempFilePath, ...) fs. ... .cpSync($SMTH, imageFile.tempFilePath, ...) fs. ... .createReadStream(imageFile.tempFilePath,...) fs. ... .createWriteStream(imageFile.tempFilePath,...) fs. ... .exists(imageFile.tempFilePath, ...) fs. ... .existsSync(imageFile.tempFilePath, ...) fs. ... .fchmod(imageFile.tempFilePath, ...) fs. ... .fchmodSync(imageFile.tempFilePath, ...) fs. ... .fchown(imageFile.tempFilePath, ...) fs. ... .fchownSync(imageFile.tempFilePath, ...) fs. ... .fdatasync(imageFile.tempFilePath, ...) fs. ... .fdatasyncSync(imageFile.tempFilePath, ...) fs. ... .fstat(imageFile.tempFilePath, ...) fs. ... .fstatSync(imageFile.tempFilePath, ...) fs. ... .fsync(imageFile.tempFilePath, ...) fs. ... .fsyncSync(imageFile.tempFilePath, ...) fs. ... .ftruncate(imageFile.tempFilePath, ...) fs. ... .ftruncateSync(imageFile.tempFilePath, ...) fs. ... .futimes(imageFile.tempFilePath, ...) fs. ... .futimesSync(imageFile.tempFilePath, ...) fs. ... .lchmod(imageFile.tempFilePath, ...) fs. ... .lchmodSync(imageFile.tempFilePath, ...) fs. ... .lchown(imageFile.tempFilePath, ...) fs. ... .lchownSync(imageFile.tempFilePath, ...) fs. ... .link(imageFile.tempFilePath, ...) fs. ... .link($SMTH, imageFile.tempFilePath, ...) fs. ... .linkSync(imageFile.tempFilePath, ...) fs. ... .linkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .lstat(imageFile.tempFilePath, ...) fs. ... .lstatSync(imageFile.tempFilePath, ...) fs. ... .lutimes(imageFile.tempFilePath, ...) fs. ... .lutimesSync(imageFile.tempFilePath, ...) fs. ... .mkdir(imageFile.tempFilePath, ...) fs. ... .mkdirSync(imageFile.tempFilePath, ...) fs. ... .mkdtemp(imageFile.tempFilePath, ...) fs. ... .mkdtempSync(imageFile.tempFilePath, ...) fs. ... .open(imageFile.tempFilePath, ...) fs. ... .openSync(imageFile.tempFilePath, ...) fs. ... .opendir(imageFile.tempFilePath, ...) fs. ... .opendirSync(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .read(imageFile.tempFilePath, ...) fs. ... .readFile(imageFile.tempFilePath, ...) fs. ... .readFileSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readSync(imageFile.tempFilePath, ...) fs. ... .readdir(imageFile.tempFilePath, ...) fs. ... .readdirSync(imageFile.tempFilePath, ...) fs. ... .readlink(imageFile.tempFilePath, ...) fs. ... .readlinkSync(imageFile.tempFilePath, ...) fs. ... .readv(imageFile.tempFilePath, ...) fs. ... .readvSync(imageFile.tempFilePath, ...) fs. ... .realpath(imageFile.tempFilePath, ...) fs. ... .realpath.native(imageFile.tempFilePath, ...) fs. ... .realpathSync.native(imageFile.tempFilePath, ...) fs. ... .realpathync(imageFile.tempFilePath, ...) fs. ... .rename(imageFile.tempFilePath, ...) fs. ... .rename($SMTH, imageFile.tempFilePath, ...) fs. ... .renameSync(imageFile.tempFilePath, ...) fs. ... .renameSync($SMTH, imageFile.tempFilePath, ...) fs. ... .rm(imageFile.tempFilePath, ...) fs. ... .rmSync(imageFile.tempFilePath, ...) fs. ... .rmdir(imageFile.tempFilePath, ...) fs. ... .rmdirSync(imageFile.tempFilePath, ...) fs. ... .stat(imageFile.tempFilePath, ...) fs. ... .statSync(imageFile.tempFilePath, ...) fs. ... .symlink(imageFile.tempFilePath, ...) fs. ... .symlink($SMTH, imageFile.tempFilePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, imageFile.tempFilePath, ...) fs. ... .truncate(imageFile.tempFilePath, ...) fs. ... .truncateSync(imageFile.tempFilePath, ...) fs. ... .unlink(imageFile.tempFilePath, ...) fs. ... .unlinkSync(imageFile.tempFilePath, ...) fs. ... .unwatchFile(imageFile.tempFilePath, ...) fs. ... .utimes(imageFile.tempFilePath, ...) fs. ... .utimesSync(imageFile.tempFilePath, ...) fs. ... .watch(imageFile.tempFilePath, ...) fs. ... .watchFile(imageFile.tempFilePath, ...) fs. ... .write(imageFile.tempFilePath, ...) fs. ... .writeFile(imageFile.tempFilePath, ...) fs. ... .writeFileSync(imageFile.tempFilePath, ...) fs. ... .writeSync(imageFile.tempFilePath, ...) fs. ... .writev(imageFile.tempFilePath, ...) fs. ... .writevSync(imageFile.tempFilePath, ...) imageFile.tempFilePath $METHOD("...", ...) access(imageFile.tempFilePath,...) accessSync(imageFile.tempFilePath, ...) appendFile(imageFile.tempFilePath,...) appendFileSync(imageFile.tempFilePath, ...) chmod(imageFile.tempFilePath,...) chmodSync(imageFile.tempFilePath, ...) chown(imageFile.tempFilePath,...) chownSync(imageFile.tempFilePath, ...) close(imageFile.tempFilePath,...) closeSync(imageFile.tempFilePath, ...) copyFile(imageFile.tempFilePath,...) copyFile($SMTH, imageFile.tempFilePath,...) copyFileSync(imageFile.tempFilePath, ...) copyFileSync($SMTH, imageFile.tempFilePath, ...) cp(imageFile.tempFilePath, ...) cp($SMTH, imageFile.tempFilePath, ...) cpSync(imageFile.tempFilePath, ...) cpSync($SMTH, imageFile.tempFilePath, ...) createReadStream(imageFile.tempFilePath,...) createWriteStream(imageFile.tempFilePath,...) exists(imageFile.tempFilePath, ...) existsSync(imageFile.tempFilePath, ...) fchmod(imageFile.tempFilePath, ...) fchmodSync(imageFile.tempFilePath, ...) fchown(imageFile.tempFilePath, ...) fchownSync(imageFile.tempFilePath, ...) fdatasync(imageFile.tempFilePath, ...) fdatasyncSync(imageFile.tempFilePath, ...) fstat(imageFile.tempFilePath, ...) fstatSync(imageFile.tempFilePath, ...) fsync(imageFile.tempFilePath, ...) fsyncSync(imageFile.tempFilePath, ...) ftruncate(imageFile.tempFilePath, ...) ftruncateSync(imageFile.tempFilePath, ...) futimes(imageFile.tempFilePath, ...) futimesSync(imageFile.tempFilePath, ...) lchmod(imageFile.tempFilePath, ...) lchmodSync(imageFile.tempFilePath, ...) lchown(imageFile.tempFilePath, ...) lchownSync(imageFile.tempFilePath, ...) link(imageFile.tempFilePath, ...) link($SMTH, imageFile.tempFilePath, ...) linkSync(imageFile.tempFilePath, ...) linkSync($SMTH, imageFile.tempFilePath, ...) lstat(imageFile.tempFilePath, ...) lstatSync(imageFile.tempFilePath, ...) lutimes(imageFile.tempFilePath, ...) lutimesSync(imageFile.tempFilePath, ...) mkdir(imageFile.tempFilePath, ...) mkdirSync(imageFile.tempFilePath, ...) mkdtemp(imageFile.tempFilePath, ...) mkdtempSync(imageFile.tempFilePath, ...) open(imageFile.tempFilePath, ...) openSync(imageFile.tempFilePath, ...) opendir(imageFile.tempFilePath, ...) opendirSync(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) read(imageFile.tempFilePath, ...) readFile(imageFile.tempFilePath, ...) readFileSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readSync(imageFile.tempFilePath, ...) readdir(imageFile.tempFilePath, ...) readdirSync(imageFile.tempFilePath, ...) readlink(imageFile.tempFilePath, ...) readlinkSync(imageFile.tempFilePath, ...) readv(imageFile.tempFilePath, ...) readvSync(imageFile.tempFilePath, ...) realpath(imageFile.tempFilePath, ...) realpath.native(imageFile.tempFilePath, ...) realpathSync.native(imageFile.tempFilePath, ...) realpathync(imageFile.tempFilePath, ...) rename(imageFile.tempFilePath, ...) rename($SMTH, imageFile.tempFilePath, ...) renameSync(imageFile.tempFilePath, ...) renameSync($SMTH, imageFile.tempFilePath, ...) rm(imageFile.tempFilePath, ...) rmSync(imageFile.tempFilePath, ...) rmdir(imageFile.tempFilePath, ...) rmdirSync(imageFile.tempFilePath, ...) stat(imageFile.tempFilePath, ...) statSync(imageFile.tempFilePath, ...) symlink(imageFile.tempFilePath, ...) symlink($SMTH, imageFile.tempFilePath, ...) symlinkSync(imageFile.tempFilePath, ...) symlinkSync($SMTH, imageFile.tempFilePath, ...) truncate(imageFile.tempFilePath, ...) truncateSync(imageFile.tempFilePath, ...) unlink(imageFile.tempFilePath, ...) unlinkSync(imageFile.tempFilePath, ...) unwatchFile(imageFile.tempFilePath, ...) utimes(imageFile.tempFilePath, ...) utimesSync(imageFile.tempFilePath, ...) watch(imageFile.tempFilePath, ...) watchFile(imageFile.tempFilePath, ...) write(imageFile.tempFilePath, ...) writeFile(imageFile.tempFilePath, ...) writeFileSync(imageFile.tempFilePath, ...) writeSync(imageFile.tempFilePath, ...) writev(imageFile.tempFilePath, ...) writevSync(imageFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = dbd45b7dd09dc5d847d4c267d87f8e591a6a2dcc213da6c34b9d4de4130a1b8afaece83f64555ad141591f61597ff09b82610358c4b2f3422c513c16a5002fa5_1
2025-05-14 00:12:01,858 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,859 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(imageFile.tempFilePath, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(imageFile.tempFilePath, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(imageFile.tempFilePath, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(imageFile.tempFilePath, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(imageFile.tempFilePath, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(imageFile.tempFilePath, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(imageFile.tempFilePath, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(imageFile.tempFilePath, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(imageFile.tempFilePath, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(imageFile.tempFilePath, filePath,...) copyFileSync(filePath, ...) copyFileSync(imageFile.tempFilePath, filePath, ...) cp(filePath, ...) cp(imageFile.tempFilePath, filePath, ...) cpSync(filePath, ...) cpSync(imageFile.tempFilePath, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(imageFile.tempFilePath, filePath, ...) linkSync(filePath, ...) linkSync(imageFile.tempFilePath, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(imageFile.tempFilePath, filePath, ...) renameSync(filePath, ...) renameSync(imageFile.tempFilePath, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(imageFile.tempFilePath, filePath, ...) symlinkSync(filePath, ...) symlinkSync(imageFile.tempFilePath, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 476845e23fcbdcf49754423d588fdb66b744b6f3c1ef3f3bfb1dfa7554bdbb0738e2c9d71be54aa4465c6e0081bdf98592013a35975eee7b8d1e0511874b618e_0
2025-05-14 00:12:01,859 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(imageFile.tempFilePath, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(imageFile.tempFilePath, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(imageFile.tempFilePath, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(imageFile.tempFilePath, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(imageFile.tempFilePath, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(imageFile.tempFilePath, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(imageFile.tempFilePath, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(imageFile.tempFilePath, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(imageFile.tempFilePath, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(imageFile.tempFilePath, filePath,...) copyFileSync(filePath, ...) copyFileSync(imageFile.tempFilePath, filePath, ...) cp(filePath, ...) cp(imageFile.tempFilePath, filePath, ...) cpSync(filePath, ...) cpSync(imageFile.tempFilePath, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(imageFile.tempFilePath, filePath, ...) linkSync(filePath, ...) linkSync(imageFile.tempFilePath, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(imageFile.tempFilePath, filePath, ...) renameSync(filePath, ...) renameSync(imageFile.tempFilePath, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(imageFile.tempFilePath, filePath, ...) symlinkSync(filePath, ...) symlinkSync(imageFile.tempFilePath, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 476845e23fcbdcf49754423d588fdb66b744b6f3c1ef3f3bfb1dfa7554bdbb0738e2c9d71be54aa4465c6e0081bdf98592013a35975eee7b8d1e0511874b618e_0
2025-05-14 00:12:01,860 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(imageFile.tempFilePath, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(imageFile.tempFilePath, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(imageFile.tempFilePath, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(imageFile.tempFilePath, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(imageFile.tempFilePath, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(imageFile.tempFilePath, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(imageFile.tempFilePath, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(imageFile.tempFilePath, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(imageFile.tempFilePath, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(imageFile.tempFilePath, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(imageFile.tempFilePath, filePath,...) copyFileSync(filePath, ...) copyFileSync(imageFile.tempFilePath, filePath, ...) cp(filePath, ...) cp(imageFile.tempFilePath, filePath, ...) cpSync(filePath, ...) cpSync(imageFile.tempFilePath, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(imageFile.tempFilePath, filePath, ...) linkSync(filePath, ...) linkSync(imageFile.tempFilePath, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(imageFile.tempFilePath, filePath, ...) renameSync(filePath, ...) renameSync(imageFile.tempFilePath, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(imageFile.tempFilePath, filePath, ...) symlinkSync(filePath, ...) symlinkSync(imageFile.tempFilePath, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 476845e23fcbdcf49754423d588fdb66b744b6f3c1ef3f3bfb1dfa7554bdbb0738e2c9d71be54aa4465c6e0081bdf98592013a35975eee7b8d1e0511874b618e_0
2025-05-14 00:12:01,860 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e0319f99672c74e34b13246525a51b73fe33efaf587e82b62173f715a492d9411eb51d054d5193268292981a751703a5aca20d791136957d932939673e440538_0
2025-05-14 00:12:01,861 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d7a4a4d47248acf7a4a5a9019ca0c132e6d547ea896f764ff569ed6f0499e21bd2699c92b2eac82825f150f3671d83c138b8e8cd764b093a4fe90d604a8c8b01_0
2025-05-14 00:12:01,862 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d7a4a4d47248acf7a4a5a9019ca0c132e6d547ea896f764ff569ed6f0499e21bd2699c92b2eac82825f150f3671d83c138b8e8cd764b093a4fe90d604a8c8b01_0
2025-05-14 00:12:01,862 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = d7a4a4d47248acf7a4a5a9019ca0c132e6d547ea896f764ff569ed6f0499e21bd2699c92b2eac82825f150f3671d83c138b8e8cd764b093a4fe90d604a8c8b01_0
2025-05-14 00:12:01,863 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = ad7004ab3a55e729a808aaea2ce76039fb93d509fad4d44275d67b516c410cb1d411571aee34b763481cb4ac610ea890ac7d3c9aae9e76ab04e2e8bae720e08e_0
2025-05-14 00:12:01,863 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,863 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_0
2025-05-14 00:12:01,864 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) filename filename import 'path';\n...\n path.join(...,filename,...) path.resolve(...,filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/file-upload-new.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 5eccf4dcfca4c5773049d0ebd2d9a51146bcd88fe62996fc05f30b29356df3b731d9561c40284c858b61ed0e6d80767564422220f4e2bd7c742aa3608e67e666_2
2025-05-14 00:12:01,864 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b2874b00d1aebd1c4cf92daf8a8540cae49c5b03ed0892a00dfad268958f4c5180afc8612bbbfab1f8cf3884c6767a69d98f5ea8aba4dc0dc5d94dcb1a34c233_0
2025-05-14 00:12:01,865 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_0
2025-05-14 00:12:01,866 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_0
2025-05-14 00:12:01,866 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_0
2025-05-14 00:12:01,867 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b2874b00d1aebd1c4cf92daf8a8540cae49c5b03ed0892a00dfad268958f4c5180afc8612bbbfab1f8cf3884c6767a69d98f5ea8aba4dc0dc5d94dcb1a34c233_0
2025-05-14 00:12:01,867 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_0
2025-05-14 00:12:01,868 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_0
2025-05-14 00:12:01,868 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/file-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 23232040ed5a270e1d026aefab27f76496e4b9956e5778d341dff7804b4447afbfede5094c986277ae040e0863a171453d07a128491c1eabc449bc8b340a7b30_1
2025-05-14 00:12:01,869 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/insurance-logo.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = bfb74c629a0f2e0e69ad6093f2942fcca583c020e1f75051ce471ff37d84be180c8a6c63e8848ba36a90939d65286141fe8d3943971fd1641b3fbb8417044a83_0
2025-05-14 00:12:01,869 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/insurance-logo.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = bfd4477a09cddc19458b61f442f2f9ed2da9df2c84013636dcfee8288ab139d1ab7e1939ede602fec72b50698987c3be3ed43125f00f600088db73b54dde0fc0_0
2025-05-14 00:12:01,870 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/insurance-logo.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = bfd4477a09cddc19458b61f442f2f9ed2da9df2c84013636dcfee8288ab139d1ab7e1939ede602fec72b50698987c3be3ed43125f00f600088db73b54dde0fc0_0
2025-05-14 00:12:01,870 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/insurance-logo.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = bfd4477a09cddc19458b61f442f2f9ed2da9df2c84013636dcfee8288ab139d1ab7e1939ede602fec72b50698987c3be3ed43125f00f600088db73b54dde0fc0_0
2025-05-14 00:12:01,870 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 545ec43a0024d72373350afda123411d5b0a3a805d69c287f00f89bfdf8c25b22215e9a184857d0f79d1bf925106ded4a1ee7b00ebd37956167a288fca278f74_0
2025-05-14 00:12:01,871 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_0
2025-05-14 00:12:01,871 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_0
2025-05-14 00:12:01,872 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_0
2025-05-14 00:12:01,873 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 545ec43a0024d72373350afda123411d5b0a3a805d69c287f00f89bfdf8c25b22215e9a184857d0f79d1bf925106ded4a1ee7b00ebd37956167a288fca278f74_0
2025-05-14 00:12:01,873 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_0
2025-05-14 00:12:01,874 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_0
2025-05-14 00:12:01,874 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/location-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = f27e4aed2eee2f36fd6854d592c6c15ff91b19d001eb871d8e51fc66f2f27b7d1fa7b2a0326a7d7395e439e41ac2f2cabe37851c7a135f40135f00ce731469df_1
2025-05-14 00:12:01,875 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 198878c6d0187b4d18fe312709d479ee55a144a73d08ff00547e6363f0ae88fcc22789c7d2a429f2597aa37a0a06f695ea413430c643390da3da58aff5d67bc3_0
2025-05-14 00:12:01,875 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_0
2025-05-14 00:12:01,876 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_0
2025-05-14 00:12:01,876 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_0
2025-05-14 00:12:01,877 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 198878c6d0187b4d18fe312709d479ee55a144a73d08ff00547e6363f0ae88fcc22789c7d2a429f2597aa37a0a06f695ea413430c643390da3da58aff5d67bc3_0
2025-05-14 00:12:01,878 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_0
2025-05-14 00:12:01,878 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_0
2025-05-14 00:12:01,878 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/simple-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 2817a17a81d51b0a0692b1613ceacc87d6f7e2579d0aa8ca727cc3848e91b5fc705676c6a9fa4e9df1c7bb0fbc79a94f9c3908e112ba9fb02b30c482026100a5_1
2025-05-14 00:12:01,879 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 0ff993fb21973fbfaca2fa2deac34cfda53fab47bf33e0e01faf2140d0490cf7ebd6bc8fc1ec98a4513ecb66afdd2753fc9e1f7d00935b785e7b82ff44c413a6_0
2025-05-14 00:12:01,880 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_0
2025-05-14 00:12:01,880 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_0
2025-05-14 00:12:01,881 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_0
2025-05-14 00:12:01,881 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 0ff993fb21973fbfaca2fa2deac34cfda53fab47bf33e0e01faf2140d0490cf7ebd6bc8fc1ec98a4513ecb66afdd2753fc9e1f7d00935b785e7b82ff44c413a6_0
2025-05-14 00:12:01,882 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_0
2025-05-14 00:12:01,882 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_0
2025-05-14 00:12:01,883 - semgrep.rule_match - DEBUG - match_key = ('dir function ... (..., dir,...) {...} dir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dir,...) fs. ... .accessSync(dir, ...) fs. ... .appendFile(dir,...) fs. ... .appendFileSync(dir, ...) fs. ... .chmod(dir,...) fs. ... .chmodSync(dir, ...) fs. ... .chown(dir,...) fs. ... .chownSync(dir, ...) fs. ... .close(dir,...) fs. ... .closeSync(dir, ...) fs. ... .copyFile(dir,...) fs. ... .copyFile($SMTH, dir,...) fs. ... .copyFileSync(dir, ...) fs. ... .copyFileSync($SMTH, dir, ...) fs. ... .cp(dir, ...) fs. ... .cp($SMTH, dir, ...) fs. ... .cpSync(dir, ...) fs. ... .cpSync($SMTH, dir, ...) fs. ... .createReadStream(dir,...) fs. ... .createWriteStream(dir,...) fs. ... .exists(dir, ...) fs. ... .existsSync(dir, ...) fs. ... .fchmod(dir, ...) fs. ... .fchmodSync(dir, ...) fs. ... .fchown(dir, ...) fs. ... .fchownSync(dir, ...) fs. ... .fdatasync(dir, ...) fs. ... .fdatasyncSync(dir, ...) fs. ... .fstat(dir, ...) fs. ... .fstatSync(dir, ...) fs. ... .fsync(dir, ...) fs. ... .fsyncSync(dir, ...) fs. ... .ftruncate(dir, ...) fs. ... .ftruncateSync(dir, ...) fs. ... .futimes(dir, ...) fs. ... .futimesSync(dir, ...) fs. ... .lchmod(dir, ...) fs. ... .lchmodSync(dir, ...) fs. ... .lchown(dir, ...) fs. ... .lchownSync(dir, ...) fs. ... .link(dir, ...) fs. ... .link($SMTH, dir, ...) fs. ... .linkSync(dir, ...) fs. ... .linkSync($SMTH, dir, ...) fs. ... .lstat(dir, ...) fs. ... .lstatSync(dir, ...) fs. ... .lutimes(dir, ...) fs. ... .lutimesSync(dir, ...) fs. ... .mkdir(dir, ...) fs. ... .mkdirSync(dir, ...) fs. ... .mkdtemp(dir, ...) fs. ... .mkdtempSync(dir, ...) fs. ... .open(dir, ...) fs. ... .openSync(dir, ...) fs. ... .opendir(dir, ...) fs. ... .opendirSync(dir, ...) fs. ... .read(dir, ...) fs. ... .read(dir, ...) fs. ... .readFile(dir, ...) fs. ... .readFileSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readSync(dir, ...) fs. ... .readdir(dir, ...) fs. ... .readdirSync(dir, ...) fs. ... .readlink(dir, ...) fs. ... .readlinkSync(dir, ...) fs. ... .readv(dir, ...) fs. ... .readvSync(dir, ...) fs. ... .realpath(dir, ...) fs. ... .realpath.native(dir, ...) fs. ... .realpathSync.native(dir, ...) fs. ... .realpathync(dir, ...) fs. ... .rename(dir, ...) fs. ... .rename($SMTH, dir, ...) fs. ... .renameSync(dir, ...) fs. ... .renameSync($SMTH, dir, ...) fs. ... .rm(dir, ...) fs. ... .rmSync(dir, ...) fs. ... .rmdir(dir, ...) fs. ... .rmdirSync(dir, ...) fs. ... .stat(dir, ...) fs. ... .statSync(dir, ...) fs. ... .symlink(dir, ...) fs. ... .symlink($SMTH, dir, ...) fs. ... .symlinkSync(dir, ...) fs. ... .symlinkSync($SMTH, dir, ...) fs. ... .truncate(dir, ...) fs. ... .truncateSync(dir, ...) fs. ... .unlink(dir, ...) fs. ... .unlinkSync(dir, ...) fs. ... .unwatchFile(dir, ...) fs. ... .utimes(dir, ...) fs. ... .utimesSync(dir, ...) fs. ... .watch(dir, ...) fs. ... .watchFile(dir, ...) fs. ... .write(dir, ...) fs. ... .writeFile(dir, ...) fs. ... .writeFileSync(dir, ...) fs. ... .writeSync(dir, ...) fs. ... .writev(dir, ...) fs. ... .writevSync(dir, ...) dir $METHOD("...", ...) access(dir,...) accessSync(dir, ...) appendFile(dir,...) appendFileSync(dir, ...) chmod(dir,...) chmodSync(dir, ...) chown(dir,...) chownSync(dir, ...) close(dir,...) closeSync(dir, ...) copyFile(dir,...) copyFile($SMTH, dir,...) copyFileSync(dir, ...) copyFileSync($SMTH, dir, ...) cp(dir, ...) cp($SMTH, dir, ...) cpSync(dir, ...) cpSync($SMTH, dir, ...) createReadStream(dir,...) createWriteStream(dir,...) exists(dir, ...) existsSync(dir, ...) fchmod(dir, ...) fchmodSync(dir, ...) fchown(dir, ...) fchownSync(dir, ...) fdatasync(dir, ...) fdatasyncSync(dir, ...) fstat(dir, ...) fstatSync(dir, ...) fsync(dir, ...) fsyncSync(dir, ...) ftruncate(dir, ...) ftruncateSync(dir, ...) futimes(dir, ...) futimesSync(dir, ...) lchmod(dir, ...) lchmodSync(dir, ...) lchown(dir, ...) lchownSync(dir, ...) link(dir, ...) link($SMTH, dir, ...) linkSync(dir, ...) linkSync($SMTH, dir, ...) lstat(dir, ...) lstatSync(dir, ...) lutimes(dir, ...) lutimesSync(dir, ...) mkdir(dir, ...) mkdirSync(dir, ...) mkdtemp(dir, ...) mkdtempSync(dir, ...) open(dir, ...) openSync(dir, ...) opendir(dir, ...) opendirSync(dir, ...) read(dir, ...) read(dir, ...) readFile(dir, ...) readFileSync(dir, ...) readSync(dir, ...) readSync(dir, ...) readdir(dir, ...) readdirSync(dir, ...) readlink(dir, ...) readlinkSync(dir, ...) readv(dir, ...) readvSync(dir, ...) realpath(dir, ...) realpath.native(dir, ...) realpathSync.native(dir, ...) realpathync(dir, ...) rename(dir, ...) rename($SMTH, dir, ...) renameSync(dir, ...) renameSync($SMTH, dir, ...) rm(dir, ...) rmSync(dir, ...) rmdir(dir, ...) rmdirSync(dir, ...) stat(dir, ...) statSync(dir, ...) symlink(dir, ...) symlink($SMTH, dir, ...) symlinkSync(dir, ...) symlinkSync($SMTH, dir, ...) truncate(dir, ...) truncateSync(dir, ...) unlink(dir, ...) unlinkSync(dir, ...) unwatchFile(dir, ...) utimes(dir, ...) utimesSync(dir, ...) watch(dir, ...) watchFile(dir, ...) write(dir, ...) writeFile(dir, ...) writeFileSync(dir, ...) writeSync(dir, ...) writev(dir, ...) writevSync(dir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/staff-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 463d130d6a1c8fabbf3157e8789a32ba7ef709de116fe8ad48359818f712445ad8be1bd532111b62a82fa4ef36e21deb691485b536366341b42c0a5733c87c4e_1
2025-05-14 00:12:01,883 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/treatment-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 05da7c733fbd18ce5d777421abefcabf43d0e68b3ca5c493a7c409b44c32e95470f6eeff06de5aace5bdfa3a052341b6d7abe70bac3200ad34e7044e5706acdc_0
2025-05-14 00:12:01,884 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/treatment-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 4d99064dede3216718ed874fbd34769516cdae75ff330186f2659b3996dbdf986c995fbbc353464a7553244beed5d1597867ec7e3f45222d7d58aa9303a5f678_0
2025-05-14 00:12:01,884 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/treatment-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 4d99064dede3216718ed874fbd34769516cdae75ff330186f2659b3996dbdf986c995fbbc353464a7553244beed5d1597867ec7e3f45222d7d58aa9303a5f678_0
2025-05-14 00:12:01,885 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req.file.filename req.file.filename import 'path';\n...\n path.join(...,req.file.filename,...) path.resolve(...,req.file.filename,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/treatment-image.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 4d99064dede3216718ed874fbd34769516cdae75ff330186f2659b3996dbdf986c995fbbc353464a7553244beed5d1597867ec7e3f45222d7d58aa9303a5f678_0
2025-05-14 00:12:01,885 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 34c784cdae64ac340131217e89274bc40e0c500b9e1dea899a8491e819da84d0ab001393599cc3518e3e6e47def6566a161595057b3bf12803856b0a3a4c2260_0
2025-05-14 00:12:01,886 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 106b33b6f9723bd5cbaeec0fc434cd07cd43be685e3e753c6f7e2683f65ebfb6259c2b8c693c99d41a4e5992dfc32f42d6ec7cce3dba364b82537d42bf15a82e_0
2025-05-14 00:12:01,886 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 106b33b6f9723bd5cbaeec0fc434cd07cd43be685e3e753c6f7e2683f65ebfb6259c2b8c693c99d41a4e5992dfc32f42d6ec7cce3dba364b82537d42bf15a82e_0
2025-05-14 00:12:01,887 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 106b33b6f9723bd5cbaeec0fc434cd07cd43be685e3e753c6f7e2683f65ebfb6259c2b8c693c99d41a4e5992dfc32f42d6ec7cce3dba364b82537d42bf15a82e_0
2025-05-14 00:12:01,887 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 60d0bdc7a87d93f5b670901eb166ec68c68acb2e6b6323536488dce53472a5f629ce5ff9ee8b8a0632054c105a8e829476bca3345f31877adbbae8d7aa444b07_0
2025-05-14 00:12:01,888 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,888 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,889 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,889 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 60d0bdc7a87d93f5b670901eb166ec68c68acb2e6b6323536488dce53472a5f629ce5ff9ee8b8a0632054c105a8e829476bca3345f31877adbbae8d7aa444b07_0
2025-05-14 00:12:01,890 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,891 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,891 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_1
2025-05-14 00:12:01,892 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 60d0bdc7a87d93f5b670901eb166ec68c68acb2e6b6323536488dce53472a5f629ce5ff9ee8b8a0632054c105a8e829476bca3345f31877adbbae8d7aa444b07_0
2025-05-14 00:12:01,892 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} uploadPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(uploadPath,...) fs. ... .accessSync(uploadPath, ...) fs. ... .appendFile(uploadPath,...) fs. ... .appendFileSync(uploadPath, ...) fs. ... .chmod(uploadPath,...) fs. ... .chmodSync(uploadPath, ...) fs. ... .chown(uploadPath,...) fs. ... .chownSync(uploadPath, ...) fs. ... .close(uploadPath,...) fs. ... .closeSync(uploadPath, ...) fs. ... .copyFile(uploadPath,...) fs. ... .copyFile($SMTH, uploadPath,...) fs. ... .copyFileSync(uploadPath, ...) fs. ... .copyFileSync($SMTH, uploadPath, ...) fs. ... .cp(uploadPath, ...) fs. ... .cp($SMTH, uploadPath, ...) fs. ... .cpSync(uploadPath, ...) fs. ... .cpSync($SMTH, uploadPath, ...) fs. ... .createReadStream(uploadPath,...) fs. ... .createWriteStream(uploadPath,...) fs. ... .exists(uploadPath, ...) fs. ... .existsSync(uploadPath, ...) fs. ... .fchmod(uploadPath, ...) fs. ... .fchmodSync(uploadPath, ...) fs. ... .fchown(uploadPath, ...) fs. ... .fchownSync(uploadPath, ...) fs. ... .fdatasync(uploadPath, ...) fs. ... .fdatasyncSync(uploadPath, ...) fs. ... .fstat(uploadPath, ...) fs. ... .fstatSync(uploadPath, ...) fs. ... .fsync(uploadPath, ...) fs. ... .fsyncSync(uploadPath, ...) fs. ... .ftruncate(uploadPath, ...) fs. ... .ftruncateSync(uploadPath, ...) fs. ... .futimes(uploadPath, ...) fs. ... .futimesSync(uploadPath, ...) fs. ... .lchmod(uploadPath, ...) fs. ... .lchmodSync(uploadPath, ...) fs. ... .lchown(uploadPath, ...) fs. ... .lchownSync(uploadPath, ...) fs. ... .link(uploadPath, ...) fs. ... .link($SMTH, uploadPath, ...) fs. ... .linkSync(uploadPath, ...) fs. ... .linkSync($SMTH, uploadPath, ...) fs. ... .lstat(uploadPath, ...) fs. ... .lstatSync(uploadPath, ...) fs. ... .lutimes(uploadPath, ...) fs. ... .lutimesSync(uploadPath, ...) fs. ... .mkdir(uploadPath, ...) fs. ... .mkdirSync(uploadPath, ...) fs. ... .mkdtemp(uploadPath, ...) fs. ... .mkdtempSync(uploadPath, ...) fs. ... .open(uploadPath, ...) fs. ... .openSync(uploadPath, ...) fs. ... .opendir(uploadPath, ...) fs. ... .opendirSync(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .readFile(uploadPath, ...) fs. ... .readFileSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readdir(uploadPath, ...) fs. ... .readdirSync(uploadPath, ...) fs. ... .readlink(uploadPath, ...) fs. ... .readlinkSync(uploadPath, ...) fs. ... .readv(uploadPath, ...) fs. ... .readvSync(uploadPath, ...) fs. ... .realpath(uploadPath, ...) fs. ... .realpath.native(uploadPath, ...) fs. ... .realpathSync.native(uploadPath, ...) fs. ... .realpathync(uploadPath, ...) fs. ... .rename(uploadPath, ...) fs. ... .rename($SMTH, uploadPath, ...) fs. ... .renameSync(uploadPath, ...) fs. ... .renameSync($SMTH, uploadPath, ...) fs. ... .rm(uploadPath, ...) fs. ... .rmSync(uploadPath, ...) fs. ... .rmdir(uploadPath, ...) fs. ... .rmdirSync(uploadPath, ...) fs. ... .stat(uploadPath, ...) fs. ... .statSync(uploadPath, ...) fs. ... .symlink(uploadPath, ...) fs. ... .symlink($SMTH, uploadPath, ...) fs. ... .symlinkSync(uploadPath, ...) fs. ... .symlinkSync($SMTH, uploadPath, ...) fs. ... .truncate(uploadPath, ...) fs. ... .truncateSync(uploadPath, ...) fs. ... .unlink(uploadPath, ...) fs. ... .unlinkSync(uploadPath, ...) fs. ... .unwatchFile(uploadPath, ...) fs. ... .utimes(uploadPath, ...) fs. ... .utimesSync(uploadPath, ...) fs. ... .watch(uploadPath, ...) fs. ... .watchFile(uploadPath, ...) fs. ... .write(uploadPath, ...) fs. ... .writeFile(uploadPath, ...) fs. ... .writeFileSync(uploadPath, ...) fs. ... .writeSync(uploadPath, ...) fs. ... .writev(uploadPath, ...) fs. ... .writevSync(uploadPath, ...) uploadPath $METHOD("...", ...) access(uploadPath,...) accessSync(uploadPath, ...) appendFile(uploadPath,...) appendFileSync(uploadPath, ...) chmod(uploadPath,...) chmodSync(uploadPath, ...) chown(uploadPath,...) chownSync(uploadPath, ...) close(uploadPath,...) closeSync(uploadPath, ...) copyFile(uploadPath,...) copyFile($SMTH, uploadPath,...) copyFileSync(uploadPath, ...) copyFileSync($SMTH, uploadPath, ...) cp(uploadPath, ...) cp($SMTH, uploadPath, ...) cpSync(uploadPath, ...) cpSync($SMTH, uploadPath, ...) createReadStream(uploadPath,...) createWriteStream(uploadPath,...) exists(uploadPath, ...) existsSync(uploadPath, ...) fchmod(uploadPath, ...) fchmodSync(uploadPath, ...) fchown(uploadPath, ...) fchownSync(uploadPath, ...) fdatasync(uploadPath, ...) fdatasyncSync(uploadPath, ...) fstat(uploadPath, ...) fstatSync(uploadPath, ...) fsync(uploadPath, ...) fsyncSync(uploadPath, ...) ftruncate(uploadPath, ...) ftruncateSync(uploadPath, ...) futimes(uploadPath, ...) futimesSync(uploadPath, ...) lchmod(uploadPath, ...) lchmodSync(uploadPath, ...) lchown(uploadPath, ...) lchownSync(uploadPath, ...) link(uploadPath, ...) link($SMTH, uploadPath, ...) linkSync(uploadPath, ...) linkSync($SMTH, uploadPath, ...) lstat(uploadPath, ...) lstatSync(uploadPath, ...) lutimes(uploadPath, ...) lutimesSync(uploadPath, ...) mkdir(uploadPath, ...) mkdirSync(uploadPath, ...) mkdtemp(uploadPath, ...) mkdtempSync(uploadPath, ...) open(uploadPath, ...) openSync(uploadPath, ...) opendir(uploadPath, ...) opendirSync(uploadPath, ...) read(uploadPath, ...) read(uploadPath, ...) readFile(uploadPath, ...) readFileSync(uploadPath, ...) readSync(uploadPath, ...) readSync(uploadPath, ...) readdir(uploadPath, ...) readdirSync(uploadPath, ...) readlink(uploadPath, ...) readlinkSync(uploadPath, ...) readv(uploadPath, ...) readvSync(uploadPath, ...) realpath(uploadPath, ...) realpath.native(uploadPath, ...) realpathSync.native(uploadPath, ...) realpathync(uploadPath, ...) rename(uploadPath, ...) rename($SMTH, uploadPath, ...) renameSync(uploadPath, ...) renameSync($SMTH, uploadPath, ...) rm(uploadPath, ...) rmSync(uploadPath, ...) rmdir(uploadPath, ...) rmdirSync(uploadPath, ...) stat(uploadPath, ...) statSync(uploadPath, ...) symlink(uploadPath, ...) symlink($SMTH, uploadPath, ...) symlinkSync(uploadPath, ...) symlinkSync($SMTH, uploadPath, ...) truncate(uploadPath, ...) truncateSync(uploadPath, ...) unlink(uploadPath, ...) unlinkSync(uploadPath, ...) unwatchFile(uploadPath, ...) utimes(uploadPath, ...) utimesSync(uploadPath, ...) watch(uploadPath, ...) watchFile(uploadPath, ...) write(uploadPath, ...) writeFile(uploadPath, ...) writeFileSync(uploadPath, ...) writeSync(uploadPath, ...) writev(uploadPath, ...) writevSync(uploadPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e53fac79208bc8524c5924ba34fd38ca6d67e3d2f478704782c1da1d57071aab2f66b3947b13c4dc851901a64d9f4486b155cd32246e6bada0f384be67bc432f_0
2025-05-14 00:12:01,893 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} uploadPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(uploadPath,...) fs. ... .accessSync(uploadPath, ...) fs. ... .appendFile(uploadPath,...) fs. ... .appendFileSync(uploadPath, ...) fs. ... .chmod(uploadPath,...) fs. ... .chmodSync(uploadPath, ...) fs. ... .chown(uploadPath,...) fs. ... .chownSync(uploadPath, ...) fs. ... .close(uploadPath,...) fs. ... .closeSync(uploadPath, ...) fs. ... .copyFile(uploadPath,...) fs. ... .copyFile($SMTH, uploadPath,...) fs. ... .copyFileSync(uploadPath, ...) fs. ... .copyFileSync($SMTH, uploadPath, ...) fs. ... .cp(uploadPath, ...) fs. ... .cp($SMTH, uploadPath, ...) fs. ... .cpSync(uploadPath, ...) fs. ... .cpSync($SMTH, uploadPath, ...) fs. ... .createReadStream(uploadPath,...) fs. ... .createWriteStream(uploadPath,...) fs. ... .exists(uploadPath, ...) fs. ... .existsSync(uploadPath, ...) fs. ... .fchmod(uploadPath, ...) fs. ... .fchmodSync(uploadPath, ...) fs. ... .fchown(uploadPath, ...) fs. ... .fchownSync(uploadPath, ...) fs. ... .fdatasync(uploadPath, ...) fs. ... .fdatasyncSync(uploadPath, ...) fs. ... .fstat(uploadPath, ...) fs. ... .fstatSync(uploadPath, ...) fs. ... .fsync(uploadPath, ...) fs. ... .fsyncSync(uploadPath, ...) fs. ... .ftruncate(uploadPath, ...) fs. ... .ftruncateSync(uploadPath, ...) fs. ... .futimes(uploadPath, ...) fs. ... .futimesSync(uploadPath, ...) fs. ... .lchmod(uploadPath, ...) fs. ... .lchmodSync(uploadPath, ...) fs. ... .lchown(uploadPath, ...) fs. ... .lchownSync(uploadPath, ...) fs. ... .link(uploadPath, ...) fs. ... .link($SMTH, uploadPath, ...) fs. ... .linkSync(uploadPath, ...) fs. ... .linkSync($SMTH, uploadPath, ...) fs. ... .lstat(uploadPath, ...) fs. ... .lstatSync(uploadPath, ...) fs. ... .lutimes(uploadPath, ...) fs. ... .lutimesSync(uploadPath, ...) fs. ... .mkdir(uploadPath, ...) fs. ... .mkdirSync(uploadPath, ...) fs. ... .mkdtemp(uploadPath, ...) fs. ... .mkdtempSync(uploadPath, ...) fs. ... .open(uploadPath, ...) fs. ... .openSync(uploadPath, ...) fs. ... .opendir(uploadPath, ...) fs. ... .opendirSync(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .readFile(uploadPath, ...) fs. ... .readFileSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readdir(uploadPath, ...) fs. ... .readdirSync(uploadPath, ...) fs. ... .readlink(uploadPath, ...) fs. ... .readlinkSync(uploadPath, ...) fs. ... .readv(uploadPath, ...) fs. ... .readvSync(uploadPath, ...) fs. ... .realpath(uploadPath, ...) fs. ... .realpath.native(uploadPath, ...) fs. ... .realpathSync.native(uploadPath, ...) fs. ... .realpathync(uploadPath, ...) fs. ... .rename(uploadPath, ...) fs. ... .rename($SMTH, uploadPath, ...) fs. ... .renameSync(uploadPath, ...) fs. ... .renameSync($SMTH, uploadPath, ...) fs. ... .rm(uploadPath, ...) fs. ... .rmSync(uploadPath, ...) fs. ... .rmdir(uploadPath, ...) fs. ... .rmdirSync(uploadPath, ...) fs. ... .stat(uploadPath, ...) fs. ... .statSync(uploadPath, ...) fs. ... .symlink(uploadPath, ...) fs. ... .symlink($SMTH, uploadPath, ...) fs. ... .symlinkSync(uploadPath, ...) fs. ... .symlinkSync($SMTH, uploadPath, ...) fs. ... .truncate(uploadPath, ...) fs. ... .truncateSync(uploadPath, ...) fs. ... .unlink(uploadPath, ...) fs. ... .unlinkSync(uploadPath, ...) fs. ... .unwatchFile(uploadPath, ...) fs. ... .utimes(uploadPath, ...) fs. ... .utimesSync(uploadPath, ...) fs. ... .watch(uploadPath, ...) fs. ... .watchFile(uploadPath, ...) fs. ... .write(uploadPath, ...) fs. ... .writeFile(uploadPath, ...) fs. ... .writeFileSync(uploadPath, ...) fs. ... .writeSync(uploadPath, ...) fs. ... .writev(uploadPath, ...) fs. ... .writevSync(uploadPath, ...) uploadPath $METHOD("...", ...) access(uploadPath,...) accessSync(uploadPath, ...) appendFile(uploadPath,...) appendFileSync(uploadPath, ...) chmod(uploadPath,...) chmodSync(uploadPath, ...) chown(uploadPath,...) chownSync(uploadPath, ...) close(uploadPath,...) closeSync(uploadPath, ...) copyFile(uploadPath,...) copyFile($SMTH, uploadPath,...) copyFileSync(uploadPath, ...) copyFileSync($SMTH, uploadPath, ...) cp(uploadPath, ...) cp($SMTH, uploadPath, ...) cpSync(uploadPath, ...) cpSync($SMTH, uploadPath, ...) createReadStream(uploadPath,...) createWriteStream(uploadPath,...) exists(uploadPath, ...) existsSync(uploadPath, ...) fchmod(uploadPath, ...) fchmodSync(uploadPath, ...) fchown(uploadPath, ...) fchownSync(uploadPath, ...) fdatasync(uploadPath, ...) fdatasyncSync(uploadPath, ...) fstat(uploadPath, ...) fstatSync(uploadPath, ...) fsync(uploadPath, ...) fsyncSync(uploadPath, ...) ftruncate(uploadPath, ...) ftruncateSync(uploadPath, ...) futimes(uploadPath, ...) futimesSync(uploadPath, ...) lchmod(uploadPath, ...) lchmodSync(uploadPath, ...) lchown(uploadPath, ...) lchownSync(uploadPath, ...) link(uploadPath, ...) link($SMTH, uploadPath, ...) linkSync(uploadPath, ...) linkSync($SMTH, uploadPath, ...) lstat(uploadPath, ...) lstatSync(uploadPath, ...) lutimes(uploadPath, ...) lutimesSync(uploadPath, ...) mkdir(uploadPath, ...) mkdirSync(uploadPath, ...) mkdtemp(uploadPath, ...) mkdtempSync(uploadPath, ...) open(uploadPath, ...) openSync(uploadPath, ...) opendir(uploadPath, ...) opendirSync(uploadPath, ...) read(uploadPath, ...) read(uploadPath, ...) readFile(uploadPath, ...) readFileSync(uploadPath, ...) readSync(uploadPath, ...) readSync(uploadPath, ...) readdir(uploadPath, ...) readdirSync(uploadPath, ...) readlink(uploadPath, ...) readlinkSync(uploadPath, ...) readv(uploadPath, ...) readvSync(uploadPath, ...) realpath(uploadPath, ...) realpath.native(uploadPath, ...) realpathSync.native(uploadPath, ...) realpathync(uploadPath, ...) rename(uploadPath, ...) rename($SMTH, uploadPath, ...) renameSync(uploadPath, ...) renameSync($SMTH, uploadPath, ...) rm(uploadPath, ...) rmSync(uploadPath, ...) rmdir(uploadPath, ...) rmdirSync(uploadPath, ...) stat(uploadPath, ...) statSync(uploadPath, ...) symlink(uploadPath, ...) symlink($SMTH, uploadPath, ...) symlinkSync(uploadPath, ...) symlinkSync($SMTH, uploadPath, ...) truncate(uploadPath, ...) truncateSync(uploadPath, ...) unlink(uploadPath, ...) unlinkSync(uploadPath, ...) unwatchFile(uploadPath, ...) utimes(uploadPath, ...) utimesSync(uploadPath, ...) watch(uploadPath, ...) watchFile(uploadPath, ...) write(uploadPath, ...) writeFile(uploadPath, ...) writeFileSync(uploadPath, ...) writeSync(uploadPath, ...) writev(uploadPath, ...) writevSync(uploadPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e53fac79208bc8524c5924ba34fd38ca6d67e3d2f478704782c1da1d57071aab2f66b3947b13c4dc851901a64d9f4486b155cd32246e6bada0f384be67bc432f_0
2025-05-14 00:12:01,893 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} uploadPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(uploadPath,...) fs. ... .accessSync(uploadPath, ...) fs. ... .appendFile(uploadPath,...) fs. ... .appendFileSync(uploadPath, ...) fs. ... .chmod(uploadPath,...) fs. ... .chmodSync(uploadPath, ...) fs. ... .chown(uploadPath,...) fs. ... .chownSync(uploadPath, ...) fs. ... .close(uploadPath,...) fs. ... .closeSync(uploadPath, ...) fs. ... .copyFile(uploadPath,...) fs. ... .copyFile($SMTH, uploadPath,...) fs. ... .copyFileSync(uploadPath, ...) fs. ... .copyFileSync($SMTH, uploadPath, ...) fs. ... .cp(uploadPath, ...) fs. ... .cp($SMTH, uploadPath, ...) fs. ... .cpSync(uploadPath, ...) fs. ... .cpSync($SMTH, uploadPath, ...) fs. ... .createReadStream(uploadPath,...) fs. ... .createWriteStream(uploadPath,...) fs. ... .exists(uploadPath, ...) fs. ... .existsSync(uploadPath, ...) fs. ... .fchmod(uploadPath, ...) fs. ... .fchmodSync(uploadPath, ...) fs. ... .fchown(uploadPath, ...) fs. ... .fchownSync(uploadPath, ...) fs. ... .fdatasync(uploadPath, ...) fs. ... .fdatasyncSync(uploadPath, ...) fs. ... .fstat(uploadPath, ...) fs. ... .fstatSync(uploadPath, ...) fs. ... .fsync(uploadPath, ...) fs. ... .fsyncSync(uploadPath, ...) fs. ... .ftruncate(uploadPath, ...) fs. ... .ftruncateSync(uploadPath, ...) fs. ... .futimes(uploadPath, ...) fs. ... .futimesSync(uploadPath, ...) fs. ... .lchmod(uploadPath, ...) fs. ... .lchmodSync(uploadPath, ...) fs. ... .lchown(uploadPath, ...) fs. ... .lchownSync(uploadPath, ...) fs. ... .link(uploadPath, ...) fs. ... .link($SMTH, uploadPath, ...) fs. ... .linkSync(uploadPath, ...) fs. ... .linkSync($SMTH, uploadPath, ...) fs. ... .lstat(uploadPath, ...) fs. ... .lstatSync(uploadPath, ...) fs. ... .lutimes(uploadPath, ...) fs. ... .lutimesSync(uploadPath, ...) fs. ... .mkdir(uploadPath, ...) fs. ... .mkdirSync(uploadPath, ...) fs. ... .mkdtemp(uploadPath, ...) fs. ... .mkdtempSync(uploadPath, ...) fs. ... .open(uploadPath, ...) fs. ... .openSync(uploadPath, ...) fs. ... .opendir(uploadPath, ...) fs. ... .opendirSync(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .read(uploadPath, ...) fs. ... .readFile(uploadPath, ...) fs. ... .readFileSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readSync(uploadPath, ...) fs. ... .readdir(uploadPath, ...) fs. ... .readdirSync(uploadPath, ...) fs. ... .readlink(uploadPath, ...) fs. ... .readlinkSync(uploadPath, ...) fs. ... .readv(uploadPath, ...) fs. ... .readvSync(uploadPath, ...) fs. ... .realpath(uploadPath, ...) fs. ... .realpath.native(uploadPath, ...) fs. ... .realpathSync.native(uploadPath, ...) fs. ... .realpathync(uploadPath, ...) fs. ... .rename(uploadPath, ...) fs. ... .rename($SMTH, uploadPath, ...) fs. ... .renameSync(uploadPath, ...) fs. ... .renameSync($SMTH, uploadPath, ...) fs. ... .rm(uploadPath, ...) fs. ... .rmSync(uploadPath, ...) fs. ... .rmdir(uploadPath, ...) fs. ... .rmdirSync(uploadPath, ...) fs. ... .stat(uploadPath, ...) fs. ... .statSync(uploadPath, ...) fs. ... .symlink(uploadPath, ...) fs. ... .symlink($SMTH, uploadPath, ...) fs. ... .symlinkSync(uploadPath, ...) fs. ... .symlinkSync($SMTH, uploadPath, ...) fs. ... .truncate(uploadPath, ...) fs. ... .truncateSync(uploadPath, ...) fs. ... .unlink(uploadPath, ...) fs. ... .unlinkSync(uploadPath, ...) fs. ... .unwatchFile(uploadPath, ...) fs. ... .utimes(uploadPath, ...) fs. ... .utimesSync(uploadPath, ...) fs. ... .watch(uploadPath, ...) fs. ... .watchFile(uploadPath, ...) fs. ... .write(uploadPath, ...) fs. ... .writeFile(uploadPath, ...) fs. ... .writeFileSync(uploadPath, ...) fs. ... .writeSync(uploadPath, ...) fs. ... .writev(uploadPath, ...) fs. ... .writevSync(uploadPath, ...) uploadPath $METHOD("...", ...) access(uploadPath,...) accessSync(uploadPath, ...) appendFile(uploadPath,...) appendFileSync(uploadPath, ...) chmod(uploadPath,...) chmodSync(uploadPath, ...) chown(uploadPath,...) chownSync(uploadPath, ...) close(uploadPath,...) closeSync(uploadPath, ...) copyFile(uploadPath,...) copyFile($SMTH, uploadPath,...) copyFileSync(uploadPath, ...) copyFileSync($SMTH, uploadPath, ...) cp(uploadPath, ...) cp($SMTH, uploadPath, ...) cpSync(uploadPath, ...) cpSync($SMTH, uploadPath, ...) createReadStream(uploadPath,...) createWriteStream(uploadPath,...) exists(uploadPath, ...) existsSync(uploadPath, ...) fchmod(uploadPath, ...) fchmodSync(uploadPath, ...) fchown(uploadPath, ...) fchownSync(uploadPath, ...) fdatasync(uploadPath, ...) fdatasyncSync(uploadPath, ...) fstat(uploadPath, ...) fstatSync(uploadPath, ...) fsync(uploadPath, ...) fsyncSync(uploadPath, ...) ftruncate(uploadPath, ...) ftruncateSync(uploadPath, ...) futimes(uploadPath, ...) futimesSync(uploadPath, ...) lchmod(uploadPath, ...) lchmodSync(uploadPath, ...) lchown(uploadPath, ...) lchownSync(uploadPath, ...) link(uploadPath, ...) link($SMTH, uploadPath, ...) linkSync(uploadPath, ...) linkSync($SMTH, uploadPath, ...) lstat(uploadPath, ...) lstatSync(uploadPath, ...) lutimes(uploadPath, ...) lutimesSync(uploadPath, ...) mkdir(uploadPath, ...) mkdirSync(uploadPath, ...) mkdtemp(uploadPath, ...) mkdtempSync(uploadPath, ...) open(uploadPath, ...) openSync(uploadPath, ...) opendir(uploadPath, ...) opendirSync(uploadPath, ...) read(uploadPath, ...) read(uploadPath, ...) readFile(uploadPath, ...) readFileSync(uploadPath, ...) readSync(uploadPath, ...) readSync(uploadPath, ...) readdir(uploadPath, ...) readdirSync(uploadPath, ...) readlink(uploadPath, ...) readlinkSync(uploadPath, ...) readv(uploadPath, ...) readvSync(uploadPath, ...) realpath(uploadPath, ...) realpath.native(uploadPath, ...) realpathSync.native(uploadPath, ...) realpathync(uploadPath, ...) rename(uploadPath, ...) rename($SMTH, uploadPath, ...) renameSync(uploadPath, ...) renameSync($SMTH, uploadPath, ...) rm(uploadPath, ...) rmSync(uploadPath, ...) rmdir(uploadPath, ...) rmdirSync(uploadPath, ...) stat(uploadPath, ...) statSync(uploadPath, ...) symlink(uploadPath, ...) symlink($SMTH, uploadPath, ...) symlinkSync(uploadPath, ...) symlinkSync($SMTH, uploadPath, ...) truncate(uploadPath, ...) truncateSync(uploadPath, ...) unlink(uploadPath, ...) unlinkSync(uploadPath, ...) unwatchFile(uploadPath, ...) utimes(uploadPath, ...) utimesSync(uploadPath, ...) watch(uploadPath, ...) watchFile(uploadPath, ...) write(uploadPath, ...) writeFile(uploadPath, ...) writeFileSync(uploadPath, ...) writeSync(uploadPath, ...) writev(uploadPath, ...) writevSync(uploadPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e53fac79208bc8524c5924ba34fd38ca6d67e3d2f478704782c1da1d57071aab2f66b3947b13c4dc851901a64d9f4486b155cd32246e6bada0f384be67bc432f_0
2025-05-14 00:12:01,894 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 60d0bdc7a87d93f5b670901eb166ec68c68acb2e6b6323536488dce53472a5f629ce5ff9ee8b8a0632054c105a8e829476bca3345f31877adbbae8d7aa444b07_0
2025-05-14 00:12:01,894 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,895 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_0
2025-05-14 00:12:01,895 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} videoFile.tempFilePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(videoFile.tempFilePath,...) fs. ... .accessSync(videoFile.tempFilePath, ...) fs. ... .appendFile(videoFile.tempFilePath,...) fs. ... .appendFileSync(videoFile.tempFilePath, ...) fs. ... .chmod(videoFile.tempFilePath,...) fs. ... .chmodSync(videoFile.tempFilePath, ...) fs. ... .chown(videoFile.tempFilePath,...) fs. ... .chownSync(videoFile.tempFilePath, ...) fs. ... .close(videoFile.tempFilePath,...) fs. ... .closeSync(videoFile.tempFilePath, ...) fs. ... .copyFile(videoFile.tempFilePath,...) fs. ... .copyFile($SMTH, videoFile.tempFilePath,...) fs. ... .copyFileSync(videoFile.tempFilePath, ...) fs. ... .copyFileSync($SMTH, videoFile.tempFilePath, ...) fs. ... .cp(videoFile.tempFilePath, ...) fs. ... .cp($SMTH, videoFile.tempFilePath, ...) fs. ... .cpSync(videoFile.tempFilePath, ...) fs. ... .cpSync($SMTH, videoFile.tempFilePath, ...) fs. ... .createReadStream(videoFile.tempFilePath,...) fs. ... .createWriteStream(videoFile.tempFilePath,...) fs. ... .exists(videoFile.tempFilePath, ...) fs. ... .existsSync(videoFile.tempFilePath, ...) fs. ... .fchmod(videoFile.tempFilePath, ...) fs. ... .fchmodSync(videoFile.tempFilePath, ...) fs. ... .fchown(videoFile.tempFilePath, ...) fs. ... .fchownSync(videoFile.tempFilePath, ...) fs. ... .fdatasync(videoFile.tempFilePath, ...) fs. ... .fdatasyncSync(videoFile.tempFilePath, ...) fs. ... .fstat(videoFile.tempFilePath, ...) fs. ... .fstatSync(videoFile.tempFilePath, ...) fs. ... .fsync(videoFile.tempFilePath, ...) fs. ... .fsyncSync(videoFile.tempFilePath, ...) fs. ... .ftruncate(videoFile.tempFilePath, ...) fs. ... .ftruncateSync(videoFile.tempFilePath, ...) fs. ... .futimes(videoFile.tempFilePath, ...) fs. ... .futimesSync(videoFile.tempFilePath, ...) fs. ... .lchmod(videoFile.tempFilePath, ...) fs. ... .lchmodSync(videoFile.tempFilePath, ...) fs. ... .lchown(videoFile.tempFilePath, ...) fs. ... .lchownSync(videoFile.tempFilePath, ...) fs. ... .link(videoFile.tempFilePath, ...) fs. ... .link($SMTH, videoFile.tempFilePath, ...) fs. ... .linkSync(videoFile.tempFilePath, ...) fs. ... .linkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .lstat(videoFile.tempFilePath, ...) fs. ... .lstatSync(videoFile.tempFilePath, ...) fs. ... .lutimes(videoFile.tempFilePath, ...) fs. ... .lutimesSync(videoFile.tempFilePath, ...) fs. ... .mkdir(videoFile.tempFilePath, ...) fs. ... .mkdirSync(videoFile.tempFilePath, ...) fs. ... .mkdtemp(videoFile.tempFilePath, ...) fs. ... .mkdtempSync(videoFile.tempFilePath, ...) fs. ... .open(videoFile.tempFilePath, ...) fs. ... .openSync(videoFile.tempFilePath, ...) fs. ... .opendir(videoFile.tempFilePath, ...) fs. ... .opendirSync(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .read(videoFile.tempFilePath, ...) fs. ... .readFile(videoFile.tempFilePath, ...) fs. ... .readFileSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readSync(videoFile.tempFilePath, ...) fs. ... .readdir(videoFile.tempFilePath, ...) fs. ... .readdirSync(videoFile.tempFilePath, ...) fs. ... .readlink(videoFile.tempFilePath, ...) fs. ... .readlinkSync(videoFile.tempFilePath, ...) fs. ... .readv(videoFile.tempFilePath, ...) fs. ... .readvSync(videoFile.tempFilePath, ...) fs. ... .realpath(videoFile.tempFilePath, ...) fs. ... .realpath.native(videoFile.tempFilePath, ...) fs. ... .realpathSync.native(videoFile.tempFilePath, ...) fs. ... .realpathync(videoFile.tempFilePath, ...) fs. ... .rename(videoFile.tempFilePath, ...) fs. ... .rename($SMTH, videoFile.tempFilePath, ...) fs. ... .renameSync(videoFile.tempFilePath, ...) fs. ... .renameSync($SMTH, videoFile.tempFilePath, ...) fs. ... .rm(videoFile.tempFilePath, ...) fs. ... .rmSync(videoFile.tempFilePath, ...) fs. ... .rmdir(videoFile.tempFilePath, ...) fs. ... .rmdirSync(videoFile.tempFilePath, ...) fs. ... .stat(videoFile.tempFilePath, ...) fs. ... .statSync(videoFile.tempFilePath, ...) fs. ... .symlink(videoFile.tempFilePath, ...) fs. ... .symlink($SMTH, videoFile.tempFilePath, ...) fs. ... .symlinkSync(videoFile.tempFilePath, ...) fs. ... .symlinkSync($SMTH, videoFile.tempFilePath, ...) fs. ... .truncate(videoFile.tempFilePath, ...) fs. ... .truncateSync(videoFile.tempFilePath, ...) fs. ... .unlink(videoFile.tempFilePath, ...) fs. ... .unlinkSync(videoFile.tempFilePath, ...) fs. ... .unwatchFile(videoFile.tempFilePath, ...) fs. ... .utimes(videoFile.tempFilePath, ...) fs. ... .utimesSync(videoFile.tempFilePath, ...) fs. ... .watch(videoFile.tempFilePath, ...) fs. ... .watchFile(videoFile.tempFilePath, ...) fs. ... .write(videoFile.tempFilePath, ...) fs. ... .writeFile(videoFile.tempFilePath, ...) fs. ... .writeFileSync(videoFile.tempFilePath, ...) fs. ... .writeSync(videoFile.tempFilePath, ...) fs. ... .writev(videoFile.tempFilePath, ...) fs. ... .writevSync(videoFile.tempFilePath, ...) videoFile.tempFilePath $METHOD("...", ...) access(videoFile.tempFilePath,...) accessSync(videoFile.tempFilePath, ...) appendFile(videoFile.tempFilePath,...) appendFileSync(videoFile.tempFilePath, ...) chmod(videoFile.tempFilePath,...) chmodSync(videoFile.tempFilePath, ...) chown(videoFile.tempFilePath,...) chownSync(videoFile.tempFilePath, ...) close(videoFile.tempFilePath,...) closeSync(videoFile.tempFilePath, ...) copyFile(videoFile.tempFilePath,...) copyFile($SMTH, videoFile.tempFilePath,...) copyFileSync(videoFile.tempFilePath, ...) copyFileSync($SMTH, videoFile.tempFilePath, ...) cp(videoFile.tempFilePath, ...) cp($SMTH, videoFile.tempFilePath, ...) cpSync(videoFile.tempFilePath, ...) cpSync($SMTH, videoFile.tempFilePath, ...) createReadStream(videoFile.tempFilePath,...) createWriteStream(videoFile.tempFilePath,...) exists(videoFile.tempFilePath, ...) existsSync(videoFile.tempFilePath, ...) fchmod(videoFile.tempFilePath, ...) fchmodSync(videoFile.tempFilePath, ...) fchown(videoFile.tempFilePath, ...) fchownSync(videoFile.tempFilePath, ...) fdatasync(videoFile.tempFilePath, ...) fdatasyncSync(videoFile.tempFilePath, ...) fstat(videoFile.tempFilePath, ...) fstatSync(videoFile.tempFilePath, ...) fsync(videoFile.tempFilePath, ...) fsyncSync(videoFile.tempFilePath, ...) ftruncate(videoFile.tempFilePath, ...) ftruncateSync(videoFile.tempFilePath, ...) futimes(videoFile.tempFilePath, ...) futimesSync(videoFile.tempFilePath, ...) lchmod(videoFile.tempFilePath, ...) lchmodSync(videoFile.tempFilePath, ...) lchown(videoFile.tempFilePath, ...) lchownSync(videoFile.tempFilePath, ...) link(videoFile.tempFilePath, ...) link($SMTH, videoFile.tempFilePath, ...) linkSync(videoFile.tempFilePath, ...) linkSync($SMTH, videoFile.tempFilePath, ...) lstat(videoFile.tempFilePath, ...) lstatSync(videoFile.tempFilePath, ...) lutimes(videoFile.tempFilePath, ...) lutimesSync(videoFile.tempFilePath, ...) mkdir(videoFile.tempFilePath, ...) mkdirSync(videoFile.tempFilePath, ...) mkdtemp(videoFile.tempFilePath, ...) mkdtempSync(videoFile.tempFilePath, ...) open(videoFile.tempFilePath, ...) openSync(videoFile.tempFilePath, ...) opendir(videoFile.tempFilePath, ...) opendirSync(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) read(videoFile.tempFilePath, ...) readFile(videoFile.tempFilePath, ...) readFileSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readSync(videoFile.tempFilePath, ...) readdir(videoFile.tempFilePath, ...) readdirSync(videoFile.tempFilePath, ...) readlink(videoFile.tempFilePath, ...) readlinkSync(videoFile.tempFilePath, ...) readv(videoFile.tempFilePath, ...) readvSync(videoFile.tempFilePath, ...) realpath(videoFile.tempFilePath, ...) realpath.native(videoFile.tempFilePath, ...) realpathSync.native(videoFile.tempFilePath, ...) realpathync(videoFile.tempFilePath, ...) rename(videoFile.tempFilePath, ...) rename($SMTH, videoFile.tempFilePath, ...) renameSync(videoFile.tempFilePath, ...) renameSync($SMTH, videoFile.tempFilePath, ...) rm(videoFile.tempFilePath, ...) rmSync(videoFile.tempFilePath, ...) rmdir(videoFile.tempFilePath, ...) rmdirSync(videoFile.tempFilePath, ...) stat(videoFile.tempFilePath, ...) statSync(videoFile.tempFilePath, ...) symlink(videoFile.tempFilePath, ...) symlink($SMTH, videoFile.tempFilePath, ...) symlinkSync(videoFile.tempFilePath, ...) symlinkSync($SMTH, videoFile.tempFilePath, ...) truncate(videoFile.tempFilePath, ...) truncateSync(videoFile.tempFilePath, ...) unlink(videoFile.tempFilePath, ...) unlinkSync(videoFile.tempFilePath, ...) unwatchFile(videoFile.tempFilePath, ...) utimes(videoFile.tempFilePath, ...) utimesSync(videoFile.tempFilePath, ...) watch(videoFile.tempFilePath, ...) watchFile(videoFile.tempFilePath, ...) write(videoFile.tempFilePath, ...) writeFile(videoFile.tempFilePath, ...) writeFileSync(videoFile.tempFilePath, ...) writeSync(videoFile.tempFilePath, ...) writev(videoFile.tempFilePath, ...) writevSync(videoFile.tempFilePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes/video-upload.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4df45fd3ba41e93898de59c20e8b412c1d339b164690cd9616afd595f445e4c60c85ce3de3308dbc9d9de34d66e84583888fc33eee3a1ff1ebdff878082b4a81_2
2025-05-14 00:12:01,896 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3f0759e0e603a5d0ac6339bcd96b44d62612480e579cf8e3d0dca55e60edef45970404706e221b29a4db153ca9e1d8c0c96d272cc314c94ae002d70a62e11736_0
2025-05-14 00:12:01,897 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_0
2025-05-14 00:12:01,897 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_0
2025-05-14 00:12:01,898 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_0
2025-05-14 00:12:01,898 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = c95abc35781a790bba7c102a70eb105b109e374d275c054a4581f687c417152db2f81063f1db30b75305a143dbd8fbff84fd88f55a7c07b0209f1849a3d95015_0
2025-05-14 00:12:01,899 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing price for product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing price for product.itemName:,error,...)\n console.error(`Error processing price for product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 7ec6b32f68d01f84e59ad5dc247064aa4c2417c7ef022da28742d1eabe66a02fac440eb01ea0337db30bf4d3ee5529d2592eb958fb94e204e11a249811145b3c_0
2025-05-14 00:12:01,899 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing price for product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing price for product.itemName:,error,...)\n console.error(`Error processing price for product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 7ec6b32f68d01f84e59ad5dc247064aa4c2417c7ef022da28742d1eabe66a02fac440eb01ea0337db30bf4d3ee5529d2592eb958fb94e204e11a249811145b3c_0
2025-05-14 00:12:01,900 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing price for product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing price for product.itemName:,error,...)\n console.error(`Error processing price for product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 7ec6b32f68d01f84e59ad5dc247064aa4c2417c7ef022da28742d1eabe66a02fac440eb01ea0337db30bf4d3ee5529d2592eb958fb94e204e11a249811145b3c_0
2025-05-14 00:12:01,900 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = c95abc35781a790bba7c102a70eb105b109e374d275c054a4581f687c417152db2f81063f1db30b75305a143dbd8fbff84fd88f55a7c07b0209f1849a3d95015_0
2025-05-14 00:12:01,901 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing product product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing product product.itemName:,error,...)\n console.error(`Error processing product product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = fd8066beab6512df8efb1a271f28e5d2b9b3bb7110cf2c7553f98ea3224e527f6580b690914c9d0448e8ffa307bd3aa5024479436aa30480ab48196528dea6ae_0
2025-05-14 00:12:01,902 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing product product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing product product.itemName:,error,...)\n console.error(`Error processing product product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = fd8066beab6512df8efb1a271f28e5d2b9b3bb7110cf2c7553f98ea3224e527f6580b690914c9d0448e8ffa307bd3aa5024479436aa30480ab48196528dea6ae_0
2025-05-14 00:12:01,902 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error processing product product.itemName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error processing product product.itemName:,error,...)\n console.error(`Error processing product product.itemName:,error,...)\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = fd8066beab6512df8efb1a271f28e5d2b9b3bb7110cf2c7553f98ea3224e527f6580b690914c9d0448e8ffa307bd3aa5024479436aa30480ab48196528dea6ae_0
2025-05-14 00:12:01,903 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3f0759e0e603a5d0ac6339bcd96b44d62612480e579cf8e3d0dca55e60edef45970404706e221b29a4db153ca9e1d8c0c96d272cc314c94ae002d70a62e11736_0
2025-05-14 00:12:01,904 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_0
2025-05-14 00:12:01,904 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_0
2025-05-14 00:12:01,905 - semgrep.rule_match - DEBUG - match_key = ('filePathOrContent function ... (..., filePathOrContent,...) {...} filePathOrContent fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePathOrContent,...) fs. ... .accessSync(filePathOrContent, ...) fs. ... .appendFile(filePathOrContent,...) fs. ... .appendFileSync(filePathOrContent, ...) fs. ... .chmod(filePathOrContent,...) fs. ... .chmodSync(filePathOrContent, ...) fs. ... .chown(filePathOrContent,...) fs. ... .chownSync(filePathOrContent, ...) fs. ... .close(filePathOrContent,...) fs. ... .closeSync(filePathOrContent, ...) fs. ... .copyFile(filePathOrContent,...) fs. ... .copyFile($SMTH, filePathOrContent,...) fs. ... .copyFileSync(filePathOrContent, ...) fs. ... .copyFileSync($SMTH, filePathOrContent, ...) fs. ... .cp(filePathOrContent, ...) fs. ... .cp($SMTH, filePathOrContent, ...) fs. ... .cpSync(filePathOrContent, ...) fs. ... .cpSync($SMTH, filePathOrContent, ...) fs. ... .createReadStream(filePathOrContent,...) fs. ... .createWriteStream(filePathOrContent,...) fs. ... .exists(filePathOrContent, ...) fs. ... .existsSync(filePathOrContent, ...) fs. ... .fchmod(filePathOrContent, ...) fs. ... .fchmodSync(filePathOrContent, ...) fs. ... .fchown(filePathOrContent, ...) fs. ... .fchownSync(filePathOrContent, ...) fs. ... .fdatasync(filePathOrContent, ...) fs. ... .fdatasyncSync(filePathOrContent, ...) fs. ... .fstat(filePathOrContent, ...) fs. ... .fstatSync(filePathOrContent, ...) fs. ... .fsync(filePathOrContent, ...) fs. ... .fsyncSync(filePathOrContent, ...) fs. ... .ftruncate(filePathOrContent, ...) fs. ... .ftruncateSync(filePathOrContent, ...) fs. ... .futimes(filePathOrContent, ...) fs. ... .futimesSync(filePathOrContent, ...) fs. ... .lchmod(filePathOrContent, ...) fs. ... .lchmodSync(filePathOrContent, ...) fs. ... .lchown(filePathOrContent, ...) fs. ... .lchownSync(filePathOrContent, ...) fs. ... .link(filePathOrContent, ...) fs. ... .link($SMTH, filePathOrContent, ...) fs. ... .linkSync(filePathOrContent, ...) fs. ... .linkSync($SMTH, filePathOrContent, ...) fs. ... .lstat(filePathOrContent, ...) fs. ... .lstatSync(filePathOrContent, ...) fs. ... .lutimes(filePathOrContent, ...) fs. ... .lutimesSync(filePathOrContent, ...) fs. ... .mkdir(filePathOrContent, ...) fs. ... .mkdirSync(filePathOrContent, ...) fs. ... .mkdtemp(filePathOrContent, ...) fs. ... .mkdtempSync(filePathOrContent, ...) fs. ... .open(filePathOrContent, ...) fs. ... .openSync(filePathOrContent, ...) fs. ... .opendir(filePathOrContent, ...) fs. ... .opendirSync(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .read(filePathOrContent, ...) fs. ... .readFile(filePathOrContent, ...) fs. ... .readFileSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readSync(filePathOrContent, ...) fs. ... .readdir(filePathOrContent, ...) fs. ... .readdirSync(filePathOrContent, ...) fs. ... .readlink(filePathOrContent, ...) fs. ... .readlinkSync(filePathOrContent, ...) fs. ... .readv(filePathOrContent, ...) fs. ... .readvSync(filePathOrContent, ...) fs. ... .realpath(filePathOrContent, ...) fs. ... .realpath.native(filePathOrContent, ...) fs. ... .realpathSync.native(filePathOrContent, ...) fs. ... .realpathync(filePathOrContent, ...) fs. ... .rename(filePathOrContent, ...) fs. ... .rename($SMTH, filePathOrContent, ...) fs. ... .renameSync(filePathOrContent, ...) fs. ... .renameSync($SMTH, filePathOrContent, ...) fs. ... .rm(filePathOrContent, ...) fs. ... .rmSync(filePathOrContent, ...) fs. ... .rmdir(filePathOrContent, ...) fs. ... .rmdirSync(filePathOrContent, ...) fs. ... .stat(filePathOrContent, ...) fs. ... .statSync(filePathOrContent, ...) fs. ... .symlink(filePathOrContent, ...) fs. ... .symlink($SMTH, filePathOrContent, ...) fs. ... .symlinkSync(filePathOrContent, ...) fs. ... .symlinkSync($SMTH, filePathOrContent, ...) fs. ... .truncate(filePathOrContent, ...) fs. ... .truncateSync(filePathOrContent, ...) fs. ... .unlink(filePathOrContent, ...) fs. ... .unlinkSync(filePathOrContent, ...) fs. ... .unwatchFile(filePathOrContent, ...) fs. ... .utimes(filePathOrContent, ...) fs. ... .utimesSync(filePathOrContent, ...) fs. ... .watch(filePathOrContent, ...) fs. ... .watchFile(filePathOrContent, ...) fs. ... .write(filePathOrContent, ...) fs. ... .writeFile(filePathOrContent, ...) fs. ... .writeFileSync(filePathOrContent, ...) fs. ... .writeSync(filePathOrContent, ...) fs. ... .writev(filePathOrContent, ...) fs. ... .writevSync(filePathOrContent, ...) filePathOrContent $METHOD("...", ...) access(filePathOrContent,...) accessSync(filePathOrContent, ...) appendFile(filePathOrContent,...) appendFileSync(filePathOrContent, ...) chmod(filePathOrContent,...) chmodSync(filePathOrContent, ...) chown(filePathOrContent,...) chownSync(filePathOrContent, ...) close(filePathOrContent,...) closeSync(filePathOrContent, ...) copyFile(filePathOrContent,...) copyFile($SMTH, filePathOrContent,...) copyFileSync(filePathOrContent, ...) copyFileSync($SMTH, filePathOrContent, ...) cp(filePathOrContent, ...) cp($SMTH, filePathOrContent, ...) cpSync(filePathOrContent, ...) cpSync($SMTH, filePathOrContent, ...) createReadStream(filePathOrContent,...) createWriteStream(filePathOrContent,...) exists(filePathOrContent, ...) existsSync(filePathOrContent, ...) fchmod(filePathOrContent, ...) fchmodSync(filePathOrContent, ...) fchown(filePathOrContent, ...) fchownSync(filePathOrContent, ...) fdatasync(filePathOrContent, ...) fdatasyncSync(filePathOrContent, ...) fstat(filePathOrContent, ...) fstatSync(filePathOrContent, ...) fsync(filePathOrContent, ...) fsyncSync(filePathOrContent, ...) ftruncate(filePathOrContent, ...) ftruncateSync(filePathOrContent, ...) futimes(filePathOrContent, ...) futimesSync(filePathOrContent, ...) lchmod(filePathOrContent, ...) lchmodSync(filePathOrContent, ...) lchown(filePathOrContent, ...) lchownSync(filePathOrContent, ...) link(filePathOrContent, ...) link($SMTH, filePathOrContent, ...) linkSync(filePathOrContent, ...) linkSync($SMTH, filePathOrContent, ...) lstat(filePathOrContent, ...) lstatSync(filePathOrContent, ...) lutimes(filePathOrContent, ...) lutimesSync(filePathOrContent, ...) mkdir(filePathOrContent, ...) mkdirSync(filePathOrContent, ...) mkdtemp(filePathOrContent, ...) mkdtempSync(filePathOrContent, ...) open(filePathOrContent, ...) openSync(filePathOrContent, ...) opendir(filePathOrContent, ...) opendirSync(filePathOrContent, ...) read(filePathOrContent, ...) read(filePathOrContent, ...) readFile(filePathOrContent, ...) readFileSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readSync(filePathOrContent, ...) readdir(filePathOrContent, ...) readdirSync(filePathOrContent, ...) readlink(filePathOrContent, ...) readlinkSync(filePathOrContent, ...) readv(filePathOrContent, ...) readvSync(filePathOrContent, ...) realpath(filePathOrContent, ...) realpath.native(filePathOrContent, ...) realpathSync.native(filePathOrContent, ...) realpathync(filePathOrContent, ...) rename(filePathOrContent, ...) rename($SMTH, filePathOrContent, ...) renameSync(filePathOrContent, ...) renameSync($SMTH, filePathOrContent, ...) rm(filePathOrContent, ...) rmSync(filePathOrContent, ...) rmdir(filePathOrContent, ...) rmdirSync(filePathOrContent, ...) stat(filePathOrContent, ...) statSync(filePathOrContent, ...) symlink(filePathOrContent, ...) symlink($SMTH, filePathOrContent, ...) symlinkSync(filePathOrContent, ...) symlinkSync($SMTH, filePathOrContent, ...) truncate(filePathOrContent, ...) truncateSync(filePathOrContent, ...) unlink(filePathOrContent, ...) unlinkSync(filePathOrContent, ...) unwatchFile(filePathOrContent, ...) utimes(filePathOrContent, ...) utimesSync(filePathOrContent, ...) watch(filePathOrContent, ...) watchFile(filePathOrContent, ...) write(filePathOrContent, ...) writeFile(filePathOrContent, ...) writeFileSync(filePathOrContent, ...) writeSync(filePathOrContent, ...) writev(filePathOrContent, ...) writevSync(filePathOrContent, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/utils/csv-processor.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6e839ffe7942b81c9d2d664c18a32d9911a121216e843c5ba4ecba6ef5a753c3895cde4de11e49050ddfa9d065534b7e710469f981483b4c0bd326f75be1ec33_1
2025-05-14 00:12:01,905 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,906 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching url:,error.message,...)\n console.error(`Error fetching url:,error.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4f86e4831e51b5031040d8da704f298e17bc737de89ded8c9d7617ac0fc1a7a65326fb05a3bff78f7cf467b5e2282719b658475537837aac143a34f9bd881ab2_0
2025-05-14 00:12:01,906 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching url:,error.message,...)\n console.error(`Error fetching url:,error.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4f86e4831e51b5031040d8da704f298e17bc737de89ded8c9d7617ac0fc1a7a65326fb05a3bff78f7cf467b5e2282719b658475537837aac143a34f9bd881ab2_0
2025-05-14 00:12:01,907 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error fetching url: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error fetching url:,error.message,...)\n console.error(`Error fetching url:,error.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4f86e4831e51b5031040d8da704f298e17bc737de89ded8c9d7617ac0fc1a7a65326fb05a3bff78f7cf467b5e2282719b658475537837aac143a34f9bd881ab2_0
2025-05-14 00:12:01,907 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,908 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Failed all maxRetries attempts to domain. Last error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n console.error(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 30b19cb5ff3ddd6d71954f5f083e27fbb38996c130a39e0cf9f9f2805a1f7910dc62a23d71dbffd4e35b7964d7d749fd8f2c7adfccf95e066bb1585348525ff3_0
2025-05-14 00:12:01,908 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Failed all maxRetries attempts to domain. Last error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n console.error(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 30b19cb5ff3ddd6d71954f5f083e27fbb38996c130a39e0cf9f9f2805a1f7910dc62a23d71dbffd4e35b7964d7d749fd8f2c7adfccf95e066bb1585348525ff3_0
2025-05-14 00:12:01,909 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Failed all maxRetries attempts to domain. Last error: $UTIL = require(\'util\')\n...\n $UTIL.format(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n console.error(`Failed all maxRetries attempts to domain. Last error:,lastError?.?.message,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 30b19cb5ff3ddd6d71954f5f083e27fbb38996c130a39e0cf9f9f2805a1f7910dc62a23d71dbffd4e35b7964d7d749fd8f2c7adfccf95e066bb1585348525ff3_0
2025-05-14 00:12:01,909 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,909 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching NPGS for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching NPGS for productName:,error,...)\n console.error(`Error searching NPGS for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 99fae769899c5dd6dcf4ab576b57679f66dd360d29c0676fb0240952f2bd92b6cf708ad798b7fd842b5d382f046e9a5c87c357006e0a0d0bb5490cfb89636825_0
2025-05-14 00:12:01,910 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching NPGS for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching NPGS for productName:,error,...)\n console.error(`Error searching NPGS for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 99fae769899c5dd6dcf4ab576b57679f66dd360d29c0676fb0240952f2bd92b6cf708ad798b7fd842b5d382f046e9a5c87c357006e0a0d0bb5490cfb89636825_0
2025-05-14 00:12:01,910 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching NPGS for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching NPGS for productName:,error,...)\n console.error(`Error searching NPGS for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 99fae769899c5dd6dcf4ab576b57679f66dd360d29c0676fb0240952f2bd92b6cf708ad798b7fd842b5d382f046e9a5c87c357006e0a0d0bb5490cfb89636825_0
2025-05-14 00:12:01,911 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,911 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Evergreen for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Evergreen for productName:,error,...)\n console.error(`Error searching Evergreen for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = c00e964fe2457ffd0e6d4a7da2854cf58ac102c62c77f3c4650d28a30842cb78019535ccf96a95b21d495d2843898d2c61edb95a385b43b882793c0b445b8c1a_0
2025-05-14 00:12:01,912 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Evergreen for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Evergreen for productName:,error,...)\n console.error(`Error searching Evergreen for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = c00e964fe2457ffd0e6d4a7da2854cf58ac102c62c77f3c4650d28a30842cb78019535ccf96a95b21d495d2843898d2c61edb95a385b43b882793c0b445b8c1a_0
2025-05-14 00:12:01,912 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Evergreen for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Evergreen for productName:,error,...)\n console.error(`Error searching Evergreen for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = c00e964fe2457ffd0e6d4a7da2854cf58ac102c62c77f3c4650d28a30842cb78019535ccf96a95b21d495d2843898d2c61edb95a385b43b882793c0b445b8c1a_0
2025-05-14 00:12:01,913 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,913 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Gourmet Glatt for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Gourmet Glatt for productName:,error,...)\n console.error(`Error searching Gourmet Glatt for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2517859505ce3b9bf3c721404943313d41029fe4e75ca5a565216260f074959b3484e7cfda55ae9e211e5963d86700cbe134f299248ce9b1ec8e6519c7889f14_0
2025-05-14 00:12:01,914 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Gourmet Glatt for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Gourmet Glatt for productName:,error,...)\n console.error(`Error searching Gourmet Glatt for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2517859505ce3b9bf3c721404943313d41029fe4e75ca5a565216260f074959b3484e7cfda55ae9e211e5963d86700cbe134f299248ce9b1ec8e6519c7889f14_0
2025-05-14 00:12:01,914 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error searching Gourmet Glatt for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error searching Gourmet Glatt for productName:,error,...)\n console.error(`Error searching Gourmet Glatt for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 2517859505ce3b9bf3c721404943313d41029fe4e75ca5a565216260f074959b3484e7cfda55ae9e211e5963d86700cbe134f299248ce9b1ec8e6519c7889f14_0
2025-05-14 00:12:01,915 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,915 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error getting average price for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error getting average price for productName:,error,...)\n console.error(`Error getting average price for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = afd7772f84f7ca387d28c5c121f9f422e6ee1bb50b05118ce205bdca5bd10fd09d4cfef179f47437da7b6b08b8aaf3017f7641a9bb1869def5b37ed150da3036_0
2025-05-14 00:12:01,916 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error getting average price for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error getting average price for productName:,error,...)\n console.error(`Error getting average price for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = afd7772f84f7ca387d28c5c121f9f422e6ee1bb50b05118ce205bdca5bd10fd09d4cfef179f47437da7b6b08b8aaf3017f7641a9bb1869def5b37ed150da3036_0
2025-05-14 00:12:01,916 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error getting average price for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error getting average price for productName:,error,...)\n console.error(`Error getting average price for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = afd7772f84f7ca387d28c5c121f9f422e6ee1bb50b05118ce205bdca5bd10fd09d4cfef179f47437da7b6b08b8aaf3017f7641a9bb1869def5b37ed150da3036_0
2025-05-14 00:12:01,917 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 50d823493d00c31d49b2abc1b86f5f02321d017460e3bd6ddf96740b66687b6a843d857a1434157e7ff529a8faf5cc9e8f001ef2831f85db25190f809420a484_0
2025-05-14 00:12:01,917 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error comparing prices for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error comparing prices for productName:,error,...)\n console.error(`Error comparing prices for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 40efbd4910c91337b4923c1fddcb935463f4b4be1db2ae365a2bf1143a5b7ce67eef3b2f568917ea8b00f7b33ff3ce29fd98b2225ac51b3db74ad6c789b5ce3f_0
2025-05-14 00:12:01,918 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error comparing prices for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error comparing prices for productName:,error,...)\n console.error(`Error comparing prices for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 40efbd4910c91337b4923c1fddcb935463f4b4be1db2ae365a2bf1143a5b7ce67eef3b2f568917ea8b00f7b33ff3ce29fd98b2225ac51b3db74ad6c789b5ce3f_0
2025-05-14 00:12:01,918 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n `Error comparing prices for productName: $UTIL = require(\'util\')\n...\n $UTIL.format(`Error comparing prices for productName:,error,...)\n console.error(`Error comparing prices for productName:,error,...)\n', PosixPath('server/utils/price-scraper.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 40efbd4910c91337b4923c1fddcb935463f4b4be1db2ae365a2bf1143a5b7ce67eef3b2f568917ea8b00f7b33ff3ce29fd98b2225ac51b3db74ad6c789b5ce3f_0
2025-05-14 00:12:01,919 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('standalone-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = acddacedd6698471e3b3d303b03839315404af74b3d04ea222f240f6a1b802632d011405c7446277c0ff68c3ce5680b44c2919339f9b9608dd690048875ab5e8_0
2025-05-14 00:12:01,920 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('standalone-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 55c2256785d5cd3d6cf1485b5a388151306d114d8a6929d08a69c32f35e49bce9480c47f2679a6da88f61cd4ff959debdc14b4311afbdaaa55888e630b6b9b6f_0
2025-05-14 00:12:01,921 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('standalone-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 55c2256785d5cd3d6cf1485b5a388151306d114d8a6929d08a69c32f35e49bce9480c47f2679a6da88f61cd4ff959debdc14b4311afbdaaa55888e630b6b9b6f_0
2025-05-14 00:12:01,922 - semgrep.rule_match - DEBUG - match_key = ('\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n   $X $X. ... .$V = "..." $X. ... .innerHTML = ... $X. ... .outerHTML = ... javascript <script ...>\n    document.getElementById(\'uploadBtn\').addEventListener(\'click\', async function() {\n      const resultDiv = document.getElementById(\'result\');\n      const fileInput = document.getElementById(\'imageFile\');\n      \n      if (!fileInput.files.length) {\n        resultDiv.innerHTML = \'<p class="error">Please select a file to upload</p>\';\n        resultDiv.style.display = \'block\';\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      console.log(\'Uploading file:\', file.name);\n      \n      // Show progress\n      resultDiv.innerHTML = \'<p>Uploading...</p>\';\n      resultDiv.style.display = \'block\';\n      \n      try {\n        // Use the raw upload endpoint\n        const uploadURL = \'/api/raw-upload/image\';\n        \n        // Use fetch to send the file directly\n        const response = await fetch(uploadURL, {\n          method: \'POST\',\n          body: file,  // Send the file directly as the body\n          headers: {\n            \'Content-Type\': file.type  // Set the correct content type\n          }\n        });\n        \n        // Handle response\n        if (response.ok) {\n          const data = await response.json();\n          resultDiv.innerHTML = `\n            <p class="success">Upload successful!</p>\n            <p>File name: ${data.file.filename}</p>\n            <p>File size: ${Math.round(data.file.size / 1024)} KB</p>\n            <p>Detected type: ${data.file.detectedType || \'unknown\'}</p>\n            <img src="${data.file.path}" alt="Uploaded image">\n          `;\n        } else {\n          let errorMessage = \'Upload failed\';\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || errorMessage;\n          } catch (err) {\n            // If response isn\'t JSON\n            errorMessage = `Status ${response.status}: ${response.statusText}`;\n          }\n          \n          // Get response as text for debugging\n          const responseText = await response.text();\n          \n          resultDiv.innerHTML = `\n            <p class="error">Upload failed: ${errorMessage}</p>\n            <details>\n              <summary>View Response Details</summary>\n              <p>Status: ${response.status}</p>\n              <p>Status Text: ${response.statusText}</p>\n              <pre>${responseText.substring(0, 500)}${responseText.length > 500 ? \'...(truncated)\' : \'\'}</pre>\n            </details>\n          `;\n        }\n      } catch (error) {\n        resultDiv.innerHTML = `\n          <p class="error">Network error: ${error.message}</p>\n          <details>\n            <summary>View Error Details</summary>\n            <pre>${error.stack || \'No stack trace available\'}</pre>\n          </details>\n        `;\n      }\n    });\n  </script>\n', PosixPath('standalone-upload.html'), 'config..semgrep.vendored-rules.html.security.audit.insecure-document-method') match_id = 55c2256785d5cd3d6cf1485b5a388151306d114d8a6929d08a69c32f35e49bce9480c47f2679a6da88f61cd4ff959debdc14b4311afbdaaa55888e630b6b9b6f_0
2025-05-14 00:12:01,925 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:20.908997 on 215 files
2025-05-14 00:12:01,927 - semgrep.core_runner - DEBUG - findings summary: 37 warning, 0 error, 25 info
2025-05-14 00:12:01,933 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-05-14 00:12:01,933 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-05-14 00:12:01,935 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEINoRJhW/semgrep/bin/semgrep-core-proprietary'.
2025-05-14 00:12:02,061 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • attached_assets/CEC logo.png
   • client/public/cec-logo.png
   • client/public/images/cec-logo.png
   • client/src/assets/cec-logo.png
   • generated-icon.png
   • public/cec-logo.png
   • public/images/cec-logo.png
   • public/uploads/staff-images/1747023419406-921090959.JPG
   • public/uploads/staff-images/1747064155714-183597406.JPG
   • public/uploads/videos/1747085170331-de1083e273f9130e.mp4

  Partially analyzed due to parsing or internal Opengrep errors

   • client/src/components/admin/StaffList.tsx (474 lines skipped)
   • tailwind.config.ts (1 lines skipped)

2025-05-14 00:12:02,062 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 2 files only partially analyzed due to parsing or internal Opengrep errors
  Scan skipped: 10 files larger than 1.0 MB
  For a full list of skipped files, run opengrep with the --verbose flag.

Ran 443 rules on 215 files: 62 findings.
2025-05-14 00:12:02,062 - semgrep.app.version - DEBUG - Version cache does not exist
2025-05-14 00:12:02,062 - semgrep.app.version - DEBUG - Version cache does not exist
2025-05-14 00:12:02,086 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
